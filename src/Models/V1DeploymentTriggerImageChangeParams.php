<?php
/*
 * OpenShiftAPIWithKubernetesLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

namespace OpenShiftAPIWithKubernetesLib\Models;

use JsonSerializable;

/**
 * DeploymentTriggerImageChangeParams represents the parameters to the ImageChange trigger.
 */
class V1DeploymentTriggerImageChangeParams implements JsonSerializable
{
    /**
     * From is a reference to an image stream tag to watch for changes. From.Name is the only required subfield - if From.Namespace is blank, the namespace of the current deployment trigger will be used.
     * @required
     * @var V1ObjectReference $from public property
     */
    public $from;

    /**
     * Automatic means that the detection of a new tag value should result in an image update inside the pod template.
     * @var bool|null $automatic public property
     */
    public $automatic;

    /**
     * ContainerNames is used to restrict tag updates to the specified set of container names in a pod.
     * @var array|null $containerNames public property
     */
    public $containerNames;

    /**
     * LastTriggeredImage is the last image to be triggered.
     * @var string|null $lastTriggeredImage public property
     */
    public $lastTriggeredImage;

    /**
     * Constructor to set initial or default values of member properties
     * @param V1ObjectReference $from               Initialization value for $this->from
     * @param bool              $automatic          Initialization value for $this->automatic
     * @param array             $containerNames     Initialization value for $this->containerNames
     * @param string            $lastTriggeredImage Initialization value for $this->lastTriggeredImage
     */
    public function __construct()
    {
        if (4 == func_num_args()) {
            $this->from               = func_get_arg(0);
            $this->automatic          = func_get_arg(1);
            $this->containerNames     = func_get_arg(2);
            $this->lastTriggeredImage = func_get_arg(3);
        }
    }


    /**
     * Encode this object to JSON
     */
    public function jsonSerialize()
    {
        $json = array();
        $json['from']               = $this->from;
        $json['automatic']          = $this->automatic;
        $json['containerNames']     = $this->containerNames;
        $json['lastTriggeredImage'] = $this->lastTriggeredImage;

        return $json;
    }
}
