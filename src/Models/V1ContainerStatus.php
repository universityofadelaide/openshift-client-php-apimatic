<?php
/*
 * OpenShiftAPIWithKubernetesLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

namespace OpenShiftAPIWithKubernetesLib\Models;

use JsonSerializable;

/**
 * ContainerStatus contains details for the current status of this container.
 */
class V1ContainerStatus implements JsonSerializable
{
    /**
     * The image the container is running. More info: http://kubernetes.io/docs/user-guide/images
     * @required
     * @var string $image public property
     */
    public $image;

    /**
     * ImageID of the container's image.
     * @required
     * @var string $imageID public property
     */
    public $imageID;

    /**
     * This must be a DNS_LABEL. Each container in a pod must have a unique name. Cannot be updated.
     * @required
     * @var string $name public property
     */
    public $name;

    /**
     * Specifies whether the container has passed its readiness probe.
     * @required
     * @var bool $ready public property
     */
    public $ready;

    /**
     * The number of times the container has been restarted, currently based on the number of dead containers that have not yet been removed. Note that this is calculated from dead containers. But those containers are subject to garbage collection. This value will get capped at 5 by GC.
     * @required
     * @var integer $restartCount public property
     */
    public $restartCount;

    /**
     * Container's ID in the format 'docker://<container_id>'. More info: http://kubernetes.io/docs/user-guide/container-environment#container-information
     * @var string|null $containerID public property
     */
    public $containerID;

    /**
     * Details about the container's last termination condition.
     * @var V1ContainerState|null $lastState public property
     */
    public $lastState;

    /**
     * Details about the container's current condition.
     * @var V1ContainerState|null $state public property
     */
    public $state;

    /**
     * Constructor to set initial or default values of member properties
     * @param string           $image        Initialization value for $this->image
     * @param string           $imageID      Initialization value for $this->imageID
     * @param string           $name         Initialization value for $this->name
     * @param bool             $ready        Initialization value for $this->ready
     * @param integer          $restartCount Initialization value for $this->restartCount
     * @param string           $containerID  Initialization value for $this->containerID
     * @param V1ContainerState $lastState    Initialization value for $this->lastState
     * @param V1ContainerState $state        Initialization value for $this->state
     */
    public function __construct()
    {
        if (8 == func_num_args()) {
            $this->image        = func_get_arg(0);
            $this->imageID      = func_get_arg(1);
            $this->name         = func_get_arg(2);
            $this->ready        = func_get_arg(3);
            $this->restartCount = func_get_arg(4);
            $this->containerID  = func_get_arg(5);
            $this->lastState    = func_get_arg(6);
            $this->state        = func_get_arg(7);
        }
    }


    /**
     * Encode this object to JSON
     */
    public function jsonSerialize()
    {
        $json = array();
        $json['image']        = $this->image;
        $json['imageID']      = $this->imageID;
        $json['name']         = $this->name;
        $json['ready']        = $this->ready;
        $json['restartCount'] = $this->restartCount;
        $json['containerID']  = $this->containerID;
        $json['lastState']    = $this->lastState;
        $json['state']        = $this->state;

        return $json;
    }
}
