<?php
/*
 * OpenShiftAPIWithKubernetesLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

namespace OpenShiftAPIWithKubernetesLib\Models;

use JsonSerializable;

/**
 * RecreateDeploymentStrategyParams are the input to the Recreate deployment strategy.
 */
class V1RecreateDeploymentStrategyParams implements JsonSerializable
{
    /**
     * Mid is a lifecycle hook which is executed while the deployment is scaled down to zero before the first new pod is created. All LifecycleHookFailurePolicy values are supported.
     * @var V1LifecycleHook|null $mid public property
     */
    public $mid;

    /**
     * Post is a lifecycle hook which is executed after the strategy has finished all deployment logic. All LifecycleHookFailurePolicy values are supported.
     * @var V1LifecycleHook|null $post public property
     */
    public $post;

    /**
     * Pre is a lifecycle hook which is executed before the strategy manipulates the deployment. All LifecycleHookFailurePolicy values are supported.
     * @var V1LifecycleHook|null $pre public property
     */
    public $pre;

    /**
     * TimeoutSeconds is the time to wait for updates before giving up. If the value is nil, a default will be used.
     * @var integer|null $timeoutSeconds public property
     */
    public $timeoutSeconds;

    /**
     * Constructor to set initial or default values of member properties
     * @param V1LifecycleHook $mid            Initialization value for $this->mid
     * @param V1LifecycleHook $post           Initialization value for $this->post
     * @param V1LifecycleHook $pre            Initialization value for $this->pre
     * @param integer         $timeoutSeconds Initialization value for $this->timeoutSeconds
     */
    public function __construct()
    {
        if (4 == func_num_args()) {
            $this->mid            = func_get_arg(0);
            $this->post           = func_get_arg(1);
            $this->pre            = func_get_arg(2);
            $this->timeoutSeconds = func_get_arg(3);
        }
    }


    /**
     * Encode this object to JSON
     */
    public function jsonSerialize()
    {
        $json = array();
        $json['mid']            = $this->mid;
        $json['post']           = $this->post;
        $json['pre']            = $this->pre;
        $json['timeoutSeconds'] = $this->timeoutSeconds;

        return $json;
    }
}
