<?php
/*
 * OpenShiftAPIWithKubernetesLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

namespace OpenShiftAPIWithKubernetesLib\Models;

use JsonSerializable;

/**
 * PodStatus represents information about the status of a pod. Status may trail the actual state of a
 * system.
 */
class V1PodStatus implements JsonSerializable
{
    /**
     * Current service state of pod. More info: http://kubernetes.io/docs/user-guide/pod-states#pod-conditions
     * @var V1SignatureCondition[]|null $conditions public property
     */
    public $conditions;

    /**
     * The list has one entry per container in the manifest. Each entry is currently the output of `docker inspect`. More info: http://kubernetes.io/docs/user-guide/pod-states#container-statuses
     * @var V1ContainerStatus[]|null $containerStatuses public property
     */
    public $containerStatuses;

    /**
     * IP address of the host to which the pod is assigned. Empty if not yet scheduled.
     * @var string|null $hostIP public property
     */
    public $hostIP;

    /**
     * The list has one entry per init container in the manifest. The most recent successful init container will have ready = true, the most recently started container will have startTime set. More info: http://kubernetes.io/docs/user-guide/pod-states#container-statuses
     * @var V1ContainerStatus[]|null $initContainerStatuses public property
     */
    public $initContainerStatuses;

    /**
     * A human readable message indicating details about why the pod is in this condition.
     * @var string|null $message public property
     */
    public $message;

    /**
     * Current condition of the pod. More info: http://kubernetes.io/docs/user-guide/pod-states#pod-phase
     * @var string|null $phase public property
     */
    public $phase;

    /**
     * IP address allocated to the pod. Routable at least within the cluster. Empty if not yet allocated.
     * @var string|null $podIP public property
     */
    public $podIP;

    /**
     * The Quality of Service (QOS) classification assigned to the pod based on resource requirements See PodQOSClass type for available QOS classes More info: https://github.com/kubernetes/kubernetes/blob/master/docs/design/resource-qos.md
     * @var string|null $qosClass public property
     */
    public $qosClass;

    /**
     * A brief CamelCase message indicating details about why the pod is in this state. e.g. 'OutOfDisk'
     * @var string|null $reason public property
     */
    public $reason;

    /**
     * RFC 3339 date and time at which the object was acknowledged by the Kubelet. This is before the Kubelet pulled the container image(s) for the pod.
     * @var string|null $startTime public property
     */
    public $startTime;

    /**
     * Constructor to set initial or default values of member properties
     * @param array  $conditions            Initialization value for $this->conditions
     * @param array  $containerStatuses     Initialization value for $this->containerStatuses
     * @param string $hostIP                Initialization value for $this->hostIP
     * @param array  $initContainerStatuses Initialization value for $this->initContainerStatuses
     * @param string $message               Initialization value for $this->message
     * @param string $phase                 Initialization value for $this->phase
     * @param string $podIP                 Initialization value for $this->podIP
     * @param string $qosClass              Initialization value for $this->qosClass
     * @param string $reason                Initialization value for $this->reason
     * @param string $startTime             Initialization value for $this->startTime
     */
    public function __construct()
    {
        if (10 == func_num_args()) {
            $this->conditions            = func_get_arg(0);
            $this->containerStatuses     = func_get_arg(1);
            $this->hostIP                = func_get_arg(2);
            $this->initContainerStatuses = func_get_arg(3);
            $this->message               = func_get_arg(4);
            $this->phase                 = func_get_arg(5);
            $this->podIP                 = func_get_arg(6);
            $this->qosClass              = func_get_arg(7);
            $this->reason                = func_get_arg(8);
            $this->startTime             = func_get_arg(9);
        }
    }


    /**
     * Encode this object to JSON
     */
    public function jsonSerialize()
    {
        $json = array();
        $json['conditions']            = $this->conditions;
        $json['containerStatuses']     = $this->containerStatuses;
        $json['hostIP']                = $this->hostIP;
        $json['initContainerStatuses'] = $this->initContainerStatuses;
        $json['message']               = $this->message;
        $json['phase']                 = $this->phase;
        $json['podIP']                 = $this->podIP;
        $json['qosClass']              = $this->qosClass;
        $json['reason']                = $this->reason;
        $json['startTime']             = $this->startTime;

        return $json;
    }
}
