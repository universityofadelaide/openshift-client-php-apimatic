<?php
/*
 * OpenShiftAPIWithKubernetesLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

namespace OpenShiftAPIWithKubernetesLib\Models;

use JsonSerializable;

/**
 * Status is a return value for calls that don't return other objects.
 */
class V1Status implements JsonSerializable
{
    /**
     * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources
     * @var string|null $apiVersion public property
     */
    public $apiVersion;

    /**
     * Suggested HTTP return code for this status, 0 if not set.
     * @var integer|null $code public property
     */
    public $code;

    /**
     * Extended data associated with the reason.  Each reason may define its own extended details. This field is optional and the data returned is not guaranteed to conform to any schema except that defined by the reason type.
     * @var V1StatusDetails|null $details public property
     */
    public $details;

    /**
     * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds
     * @var string|null $kind public property
     */
    public $kind;

    /**
     * A human-readable description of the status of this operation.
     * @var string|null $message public property
     */
    public $message;

    /**
     * Standard list metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds
     * @var V1ListMeta|null $metadata public property
     */
    public $metadata;

    /**
     * A machine-readable description of why this operation is in the "Failure" status. If this value is empty there is no information available. A Reason clarifies an HTTP status code but does not override it.
     * @var string|null $reason public property
     */
    public $reason;

    /**
     * Status of the operation. One of: "Success" or "Failure". More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status
     * @var string|null $status public property
     */
    public $status;

    /**
     * Constructor to set initial or default values of member properties
     * @param string          $apiVersion Initialization value for $this->apiVersion
     * @param integer         $code       Initialization value for $this->code
     * @param V1StatusDetails $details    Initialization value for $this->details
     * @param string          $kind       Initialization value for $this->kind
     * @param string          $message    Initialization value for $this->message
     * @param V1ListMeta      $metadata   Initialization value for $this->metadata
     * @param string          $reason     Initialization value for $this->reason
     * @param string          $status     Initialization value for $this->status
     */
    public function __construct()
    {
        if (8 == func_num_args()) {
            $this->apiVersion = func_get_arg(0);
            $this->code       = func_get_arg(1);
            $this->details    = func_get_arg(2);
            $this->kind       = func_get_arg(3);
            $this->message    = func_get_arg(4);
            $this->metadata   = func_get_arg(5);
            $this->reason     = func_get_arg(6);
            $this->status     = func_get_arg(7);
        }
    }


    /**
     * Encode this object to JSON
     */
    public function jsonSerialize()
    {
        $json = array();
        $json['apiVersion'] = $this->apiVersion;
        $json['code']       = $this->code;
        $json['details']    = $this->details;
        $json['kind']       = $this->kind;
        $json['message']    = $this->message;
        $json['metadata']   = $this->metadata;
        $json['reason']     = $this->reason;
        $json['status']     = $this->status;

        return $json;
    }
}
