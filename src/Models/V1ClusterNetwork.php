<?php
/*
 * OpenShiftAPIWithKubernetesLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

namespace OpenShiftAPIWithKubernetesLib\Models;

use JsonSerializable;

/**
 * ClusterNetwork describes the cluster network. There is normally only one object of this type, named
 * "default", which is created by the SDN network plugin based on the master configuration when the
 * cluster is brought up for the first time.
 */
class V1ClusterNetwork implements JsonSerializable
{
    /**
     * HostSubnetLength is the number of bits of network to allocate to each node. eg, 8 would mean that each node would have a /24 slice of the overlay network for its pods
     * @required
     * @var integer $hostsubnetlength public property
     */
    public $hostsubnetlength;

    /**
     * Network is a CIDR string specifying the global overlay network's L3 space
     * @required
     * @var string $network public property
     */
    public $network;

    /**
     * ServiceNetwork is the CIDR range that Service IP addresses are allocated from
     * @required
     * @var string $serviceNetwork public property
     */
    public $serviceNetwork;

    /**
     * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources
     * @var string|null $apiVersion public property
     */
    public $apiVersion;

    /**
     * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds
     * @var string|null $kind public property
     */
    public $kind;

    /**
     * Standard object's metadata.
     * @var V1ObjectMeta|null $metadata public property
     */
    public $metadata;

    /**
     * PluginName is the name of the network plugin being used
     * @var string|null $pluginName public property
     */
    public $pluginName;

    /**
     * Constructor to set initial or default values of member properties
     * @param integer      $hostsubnetlength Initialization value for $this->hostsubnetlength
     * @param string       $network          Initialization value for $this->network
     * @param string       $serviceNetwork   Initialization value for $this->serviceNetwork
     * @param string       $apiVersion       Initialization value for $this->apiVersion
     * @param string       $kind             Initialization value for $this->kind
     * @param V1ObjectMeta $metadata         Initialization value for $this->metadata
     * @param string       $pluginName       Initialization value for $this->pluginName
     */
    public function __construct()
    {
        if (7 == func_num_args()) {
            $this->hostsubnetlength = func_get_arg(0);
            $this->network          = func_get_arg(1);
            $this->serviceNetwork   = func_get_arg(2);
            $this->apiVersion       = func_get_arg(3);
            $this->kind             = func_get_arg(4);
            $this->metadata         = func_get_arg(5);
            $this->pluginName       = func_get_arg(6);
        }
    }


    /**
     * Encode this object to JSON
     */
    public function jsonSerialize()
    {
        $json = array();
        $json['hostsubnetlength'] = $this->hostsubnetlength;
        $json['network']          = $this->network;
        $json['serviceNetwork']   = $this->serviceNetwork;
        $json['apiVersion']       = $this->apiVersion;
        $json['kind']             = $this->kind;
        $json['metadata']         = $this->metadata;
        $json['pluginName']       = $this->pluginName;

        return $json;
    }
}
