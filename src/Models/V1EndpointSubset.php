<?php
/*
 * OpenShiftAPIWithKubernetesLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

namespace OpenShiftAPIWithKubernetesLib\Models;

use JsonSerializable;

/**
 * EndpointSubset is a group of addresses with a common set of ports. The expanded set of endpoints is
 * the Cartesian product of Addresses x Ports. For example, given:
 * {
 * Addresses: [{"ip": "10.10.1.1"}, {"ip": "10.10.2.2"}],
 * Ports:     [{"name": "a", "port": 8675}, {"name": "b", "port": 309}]
 * }
 * The resulting set of endpoints can be viewed as:
 * a: [ 10.10.1.1:8675, 10.10.2.2:8675 ],
 * b: [ 10.10.1.1:309, 10.10.2.2:309 ]
 */
class V1EndpointSubset implements JsonSerializable
{
    /**
     * IP addresses which offer the related ports that are marked as ready. These endpoints should be considered safe for load balancers and clients to utilize.
     * @var V1EndpointAddress[]|null $addresses public property
     */
    public $addresses;

    /**
     * IP addresses which offer the related ports but are not currently marked as ready because they have not yet finished starting, have recently failed a readiness check, or have recently failed a liveness check.
     * @var V1EndpointAddress[]|null $notReadyAddresses public property
     */
    public $notReadyAddresses;

    /**
     * Port numbers available on the related IP addresses.
     * @var V1EndpointPort[]|null $ports public property
     */
    public $ports;

    /**
     * Constructor to set initial or default values of member properties
     * @param array $addresses         Initialization value for $this->addresses
     * @param array $notReadyAddresses Initialization value for $this->notReadyAddresses
     * @param array $ports             Initialization value for $this->ports
     */
    public function __construct()
    {
        if (3 == func_num_args()) {
            $this->addresses         = func_get_arg(0);
            $this->notReadyAddresses = func_get_arg(1);
            $this->ports             = func_get_arg(2);
        }
    }


    /**
     * Encode this object to JSON
     */
    public function jsonSerialize()
    {
        $json = array();
        $json['addresses']         = $this->addresses;
        $json['notReadyAddresses'] = $this->notReadyAddresses;
        $json['ports']             = $this->ports;

        return $json;
    }
}
