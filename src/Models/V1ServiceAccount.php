<?php
/*
 * OpenShiftAPIWithKubernetesLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

namespace OpenShiftAPIWithKubernetesLib\Models;

use JsonSerializable;

/**
 * ServiceAccount binds together: * a name, understood by users, and perhaps by peripheral systems, for
 * an identity * a principal that can be authenticated and authorized * a set of secrets
 */
class V1ServiceAccount implements JsonSerializable
{
    /**
     * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources
     * @var string|null $apiVersion public property
     */
    public $apiVersion;

    /**
     * AutomountServiceAccountToken indicates whether pods running as this service account should have an API token automatically mounted. Can be overridden at the pod level.
     * @var bool|null $automountServiceAccountToken public property
     */
    public $automountServiceAccountToken;

    /**
     * ImagePullSecrets is a list of references to secrets in the same namespace to use for pulling any images in pods that reference this ServiceAccount. ImagePullSecrets are distinct from Secrets because Secrets can be mounted in the pod, but ImagePullSecrets are only accessed by the kubelet. More info: http://kubernetes.io/docs/user-guide/secrets#manually-specifying-an-imagepullsecret
     * @var V1LocalObjectReference[]|null $imagePullSecrets public property
     */
    public $imagePullSecrets;

    /**
     * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds
     * @var string|null $kind public property
     */
    public $kind;

    /**
     * Standard object's metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata
     * @var V1ObjectMeta|null $metadata public property
     */
    public $metadata;

    /**
     * Secrets is the list of secrets allowed to be used by pods running using this ServiceAccount. More info: http://kubernetes.io/docs/user-guide/secrets
     * @var V1ObjectReference[]|null $secrets public property
     */
    public $secrets;

    /**
     * Constructor to set initial or default values of member properties
     * @param string       $apiVersion                   Initialization value for $this->apiVersion
     * @param bool         $automountServiceAccountToken Initialization value for $this->automountServiceAccountToken
     * @param array        $imagePullSecrets             Initialization value for $this->imagePullSecrets
     * @param string       $kind                         Initialization value for $this->kind
     * @param V1ObjectMeta $metadata                     Initialization value for $this->metadata
     * @param array        $secrets                      Initialization value for $this->secrets
     */
    public function __construct()
    {
        if (6 == func_num_args()) {
            $this->apiVersion                   = func_get_arg(0);
            $this->automountServiceAccountToken = func_get_arg(1);
            $this->imagePullSecrets             = func_get_arg(2);
            $this->kind                         = func_get_arg(3);
            $this->metadata                     = func_get_arg(4);
            $this->secrets                      = func_get_arg(5);
        }
    }


    /**
     * Encode this object to JSON
     */
    public function jsonSerialize()
    {
        $json = array();
        $json['apiVersion']                   = $this->apiVersion;
        $json['automountServiceAccountToken'] = $this->automountServiceAccountToken;
        $json['imagePullSecrets']             = $this->imagePullSecrets;
        $json['kind']                         = $this->kind;
        $json['metadata']                     = $this->metadata;
        $json['secrets']                      = $this->secrets;

        return $json;
    }
}
