<?php
/*
 * OpenShiftAPIWithKubernetesLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

namespace OpenShiftAPIWithKubernetesLib\Models;

use JsonSerializable;

/**
 * BuildOutput is input to a build strategy and describes the Docker image that the strategy should
 * produce.
 */
class V1BuildOutput implements JsonSerializable
{
    /**
     * imageLabels define a list of labels that are applied to the resulting image. If there are multiple labels with the same name then the last one in the list is used.
     * @var V1ImageLabel[]|null $imageLabels public property
     */
    public $imageLabels;

    /**
     * PushSecret is the name of a Secret that would be used for setting up the authentication for executing the Docker push to authentication enabled Docker Registry (or Docker Hub).
     * @var V1LocalObjectReference|null $pushSecret public property
     */
    public $pushSecret;

    /**
     * to defines an optional location to push the output of this build to. Kind must be one of 'ImageStreamTag' or 'DockerImage'. This value will be used to look up a Docker image repository to push to. In the case of an ImageStreamTag, the ImageStreamTag will be looked for in the namespace of the build unless Namespace is specified.
     * @var V1ObjectReference|null $to public property
     */
    public $to;

    /**
     * Constructor to set initial or default values of member properties
     * @param array                  $imageLabels Initialization value for $this->imageLabels
     * @param V1LocalObjectReference $pushSecret  Initialization value for $this->pushSecret
     * @param V1ObjectReference      $to          Initialization value for $this->to
     */
    public function __construct()
    {
        if (3 == func_num_args()) {
            $this->imageLabels = func_get_arg(0);
            $this->pushSecret  = func_get_arg(1);
            $this->to          = func_get_arg(2);
        }
    }


    /**
     * Encode this object to JSON
     */
    public function jsonSerialize()
    {
        $json = array();
        $json['imageLabels'] = $this->imageLabels;
        $json['pushSecret']  = $this->pushSecret;
        $json['to']          = $this->to;

        return $json;
    }
}
