<?php
/*
 * OpenShiftAPIWithKubernetesLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

namespace OpenShiftAPIWithKubernetesLib\Models;

use JsonSerializable;

/**
 * Lifecycle describes actions that the management system should take in response to container
 * lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container
 * blocks until the action is complete, unless the container process fails, in which case the handler
 * is aborted.
 */
class V1Lifecycle implements JsonSerializable
{
    /**
     * PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: http://kubernetes.io/docs/user-guide/container-environment#hook-details
     * @var V1Handler|null $postStart public property
     */
    public $postStart;

    /**
     * PreStop is called immediately before a container is terminated. The container is terminated after the handler completes. The reason for termination is passed to the handler. Regardless of the outcome of the handler, the container is eventually terminated. Other management of the container blocks until the hook completes. More info: http://kubernetes.io/docs/user-guide/container-environment#hook-details
     * @var V1Handler|null $preStop public property
     */
    public $preStop;

    /**
     * Constructor to set initial or default values of member properties
     * @param V1Handler $postStart Initialization value for $this->postStart
     * @param V1Handler $preStop   Initialization value for $this->preStop
     */
    public function __construct()
    {
        if (2 == func_num_args()) {
            $this->postStart = func_get_arg(0);
            $this->preStop   = func_get_arg(1);
        }
    }


    /**
     * Encode this object to JSON
     */
    public function jsonSerialize()
    {
        $json = array();
        $json['postStart'] = $this->postStart;
        $json['preStop']   = $this->preStop;

        return $json;
    }
}
