<?php
/*
 * OpenShiftAPIWithKubernetesLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

namespace OpenShiftAPIWithKubernetesLib\Models;

use JsonSerializable;

/**
 * Represents a Quobyte mount that lasts the lifetime of a pod. Quobyte volumes do not support
 * ownership management or SELinux relabeling.
 */
class V1QuobyteVolumeSource implements JsonSerializable
{
    /**
     * Registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes
     * @required
     * @var string $registry public property
     */
    public $registry;

    /**
     * Volume is a string that references an already created Quobyte volume by name.
     * @required
     * @var string $volume public property
     */
    public $volume;

    /**
     * Group to map volume access to Default is no group
     * @var string|null $group public property
     */
    public $group;

    /**
     * ReadOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false.
     * @var bool|null $readOnly public property
     */
    public $readOnly;

    /**
     * User to map volume access to Defaults to serivceaccount user
     * @var string|null $user public property
     */
    public $user;

    /**
     * Constructor to set initial or default values of member properties
     * @param string $registry Initialization value for $this->registry
     * @param string $volume   Initialization value for $this->volume
     * @param string $group    Initialization value for $this->group
     * @param bool   $readOnly Initialization value for $this->readOnly
     * @param string $user     Initialization value for $this->user
     */
    public function __construct()
    {
        if (5 == func_num_args()) {
            $this->registry = func_get_arg(0);
            $this->volume   = func_get_arg(1);
            $this->group    = func_get_arg(2);
            $this->readOnly = func_get_arg(3);
            $this->user     = func_get_arg(4);
        }
    }


    /**
     * Encode this object to JSON
     */
    public function jsonSerialize()
    {
        $json = array();
        $json['registry'] = $this->registry;
        $json['volume']   = $this->volume;
        $json['group']    = $this->group;
        $json['readOnly'] = $this->readOnly;
        $json['user']     = $this->user;

        return $json;
    }
}
