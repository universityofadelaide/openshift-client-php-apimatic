<?php
/*
 * OpenShiftAPIWithKubernetesLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

namespace OpenShiftAPIWithKubernetesLib\Models;

use JsonSerializable;

/**
 * Template contains the inputs needed to produce a Config.
 */
class V1Template implements JsonSerializable
{
    /**
     * objects is an array of resources to include in this template. If a namespace value is hardcoded in the object, it will be removed during template instantiation, however if the namespace value is, or contains, a ${PARAMETER_REFERENCE}, the resolved value after parameter substitution will be respected and the object will be created in that namespace.
     * @required
     * @var RuntimeRawExtension[] $objects public property
     */
    public $objects;

    /**
     * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources
     * @var string|null $apiVersion public property
     */
    public $apiVersion;

    /**
     * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds
     * @var string|null $kind public property
     */
    public $kind;

    /**
     * labels is a optional set of labels that are applied to every object during the Template to Config transformation.
     * @var array|null $labels public property
     */
    public $labels;

    /**
     * message is an optional instructional message that will be displayed when this template is instantiated. This field should inform the user how to utilize the newly created resources. Parameter substitution will be performed on the message before being displayed so that generated credentials and other parameters can be included in the output.
     * @var string|null $message public property
     */
    public $message;

    /**
     * Standard object's metadata.
     * @var V1ObjectMeta|null $metadata public property
     */
    public $metadata;

    /**
     * parameters is an optional array of Parameters used during the Template to Config transformation.
     * @var V1Parameter[]|null $parameters public property
     */
    public $parameters;

    /**
     * Constructor to set initial or default values of member properties
     * @param array        $objects    Initialization value for $this->objects
     * @param string       $apiVersion Initialization value for $this->apiVersion
     * @param string       $kind       Initialization value for $this->kind
     * @param array        $labels     Initialization value for $this->labels
     * @param string       $message    Initialization value for $this->message
     * @param V1ObjectMeta $metadata   Initialization value for $this->metadata
     * @param array        $parameters Initialization value for $this->parameters
     */
    public function __construct()
    {
        if (7 == func_num_args()) {
            $this->objects    = func_get_arg(0);
            $this->apiVersion = func_get_arg(1);
            $this->kind       = func_get_arg(2);
            $this->labels     = func_get_arg(3);
            $this->message    = func_get_arg(4);
            $this->metadata   = func_get_arg(5);
            $this->parameters = func_get_arg(6);
        }
    }


    /**
     * Encode this object to JSON
     */
    public function jsonSerialize()
    {
        $json = array();
        $json['objects']    = $this->objects;
        $json['apiVersion'] = $this->apiVersion;
        $json['kind']       = $this->kind;
        $json['labels']     = $this->labels;
        $json['message']    = $this->message;
        $json['metadata']   = $this->metadata;
        $json['parameters'] = $this->parameters;

        return $json;
    }
}
