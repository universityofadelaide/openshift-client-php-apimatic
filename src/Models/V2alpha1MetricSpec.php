<?php
/*
 * OpenShiftAPIWithKubernetesLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

namespace OpenShiftAPIWithKubernetesLib\Models;

use JsonSerializable;

/**
 * MetricSpec specifies how to scale based on a single metric (only `type` and one other matching field
 * should be set at once).
 */
class V2alpha1MetricSpec implements JsonSerializable
{
    /**
     * type is the type of metric source.  It should match one of the fields below.
     * @required
     * @var string $type public property
     */
    public $type;

    /**
     * object refers to a metric describing a single kubernetes object (for example, hits-per-second on an Ingress object).
     * @var V2alpha1ObjectMetricSource|null $object public property
     */
    public $object;

    /**
     * pods refers to a metric describing each pod in the current scale target (for example, transactions-processed-per-second).  The values will be averaged together before being compared to the target value.
     * @var V2alpha1PodsMetricSource|null $pods public property
     */
    public $pods;

    /**
     * resource refers to a resource metric (such as those specified in requests and limits) known to Kubernetes describing each pod in the current scale target (e.g. CPU or memory). Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the "pods" source.
     * @var V2alpha1ResourceMetricSource|null $resource public property
     */
    public $resource;

    /**
     * Constructor to set initial or default values of member properties
     * @param string                       $type     Initialization value for $this->type
     * @param V2alpha1ObjectMetricSource   $object   Initialization value for $this->object
     * @param V2alpha1PodsMetricSource     $pods     Initialization value for $this->pods
     * @param V2alpha1ResourceMetricSource $resource Initialization value for $this->resource
     */
    public function __construct()
    {
        if (4 == func_num_args()) {
            $this->type     = func_get_arg(0);
            $this->object   = func_get_arg(1);
            $this->pods     = func_get_arg(2);
            $this->resource = func_get_arg(3);
        }
    }


    /**
     * Encode this object to JSON
     */
    public function jsonSerialize()
    {
        $json = array();
        $json['type']     = $this->type;
        $json['object']   = $this->object;
        $json['pods']     = $this->pods;
        $json['resource'] = $this->resource;

        return $json;
    }
}
