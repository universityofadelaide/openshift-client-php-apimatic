<?php
/*
 * OpenShiftAPIWithKubernetesLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

namespace OpenShiftAPIWithKubernetesLib\Models;

use JsonSerializable;

/**
 * AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
 */
class V1AzureDiskVolumeSource implements JsonSerializable
{
    /**
     * The Name of the data disk in the blob storage
     * @required
     * @var string $diskName public property
     */
    public $diskName;

    /**
     * The URI the data disk in the blob storage
     * @required
     * @var string $diskURI public property
     */
    public $diskURI;

    /**
     * Host Caching mode: None, Read Only, Read Write.
     * @var string|null $cachingMode public property
     */
    public $cachingMode;

    /**
     * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
     * @var string|null $fsType public property
     */
    public $fsType;

    /**
     * Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
     * @var bool|null $readOnly public property
     */
    public $readOnly;

    /**
     * Constructor to set initial or default values of member properties
     * @param string $diskName    Initialization value for $this->diskName
     * @param string $diskURI     Initialization value for $this->diskURI
     * @param string $cachingMode Initialization value for $this->cachingMode
     * @param string $fsType      Initialization value for $this->fsType
     * @param bool   $readOnly    Initialization value for $this->readOnly
     */
    public function __construct()
    {
        if (5 == func_num_args()) {
            $this->diskName    = func_get_arg(0);
            $this->diskURI     = func_get_arg(1);
            $this->cachingMode = func_get_arg(2);
            $this->fsType      = func_get_arg(3);
            $this->readOnly    = func_get_arg(4);
        }
    }


    /**
     * Encode this object to JSON
     */
    public function jsonSerialize()
    {
        $json = array();
        $json['diskName']    = $this->diskName;
        $json['diskURI']     = $this->diskURI;
        $json['cachingMode'] = $this->cachingMode;
        $json['fsType']      = $this->fsType;
        $json['readOnly']    = $this->readOnly;

        return $json;
    }
}
