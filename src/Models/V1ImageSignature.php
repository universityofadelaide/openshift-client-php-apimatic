<?php
/*
 * OpenShiftAPIWithKubernetesLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

namespace OpenShiftAPIWithKubernetesLib\Models;

use JsonSerializable;

/**
 * ImageSignature holds a signature of an image. It allows to verify image identity and possibly other
 * claims as long as the signature is trusted. Based on this information it is possible to restrict
 * runnable images to those matching cluster-wide policy. Mandatory fields should be parsed by clients
 * doing image verification. The others are parsed from signature's content by the server. They serve
 * just an informative purpose.
 */
class V1ImageSignature implements JsonSerializable
{
    /**
     * Required: An opaque binary string which is an image's signature.
     * @required
     * @var string $content public property
     */
    public $content;

    /**
     * Required: Describes a type of stored blob.
     * @required
     * @var string $type public property
     */
    public $type;

    /**
     * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources
     * @var string|null $apiVersion public property
     */
    public $apiVersion;

    /**
     * Conditions represent the latest available observations of a signature's current state.
     * @var V1SignatureCondition[]|null $conditions public property
     */
    public $conditions;

    /**
     * If specified, it is the time of signature's creation.
     * @var string|null $created public property
     */
    public $created;

    /**
     * A human readable string representing image's identity. It could be a product name and version, or an image pull spec (e.g. "registry.access.redhat.com/rhel7/rhel:7.2").
     * @var string|null $imageIdentity public property
     */
    public $imageIdentity;

    /**
     * If specified, it holds information about an issuer of signing certificate or key (a person or entity who signed the signing certificate or key).
     * @var V1SignatureIssuer|null $issuedBy public property
     */
    public $issuedBy;

    /**
     * If specified, it holds information about a subject of signing certificate or key (a person or entity who signed the image).
     * @var V1SignatureSubject|null $issuedTo public property
     */
    public $issuedTo;

    /**
     * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds
     * @var string|null $kind public property
     */
    public $kind;

    /**
     * Standard object's metadata.
     * @var V1ObjectMeta|null $metadata public property
     */
    public $metadata;

    /**
     * Contains claims from the signature.
     * @var array|null $signedClaims public property
     */
    public $signedClaims;

    /**
     * Constructor to set initial or default values of member properties
     * @param string             $content       Initialization value for $this->content
     * @param string             $type          Initialization value for $this->type
     * @param string             $apiVersion    Initialization value for $this->apiVersion
     * @param array              $conditions    Initialization value for $this->conditions
     * @param string             $created       Initialization value for $this->created
     * @param string             $imageIdentity Initialization value for $this->imageIdentity
     * @param V1SignatureIssuer  $issuedBy      Initialization value for $this->issuedBy
     * @param V1SignatureSubject $issuedTo      Initialization value for $this->issuedTo
     * @param string             $kind          Initialization value for $this->kind
     * @param V1ObjectMeta       $metadata      Initialization value for $this->metadata
     * @param array              $signedClaims  Initialization value for $this->signedClaims
     */
    public function __construct()
    {
        if (11 == func_num_args()) {
            $this->content       = func_get_arg(0);
            $this->type          = func_get_arg(1);
            $this->apiVersion    = func_get_arg(2);
            $this->conditions    = func_get_arg(3);
            $this->created       = func_get_arg(4);
            $this->imageIdentity = func_get_arg(5);
            $this->issuedBy      = func_get_arg(6);
            $this->issuedTo      = func_get_arg(7);
            $this->kind          = func_get_arg(8);
            $this->metadata      = func_get_arg(9);
            $this->signedClaims  = func_get_arg(10);
        }
    }


    /**
     * Encode this object to JSON
     */
    public function jsonSerialize()
    {
        $json = array();
        $json['content']       = $this->content;
        $json['type']          = $this->type;
        $json['apiVersion']    = $this->apiVersion;
        $json['conditions']    = $this->conditions;
        $json['created']       = $this->created;
        $json['imageIdentity'] = $this->imageIdentity;
        $json['issuedBy']      = $this->issuedBy;
        $json['issuedTo']      = $this->issuedTo;
        $json['kind']          = $this->kind;
        $json['metadata']      = $this->metadata;
        $json['signedClaims']  = $this->signedClaims;

        return $json;
    }
}
