<?php
/*
 * OpenShiftAPIWithKubernetesLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

namespace OpenShiftAPIWithKubernetesLib\Models;

use JsonSerializable;

/**
 * BuildStatus contains the status of a build
 */
class V1BuildStatus implements JsonSerializable
{
    /**
     * phase is the point in the build lifecycle. Possible values are "New", "Pending", "Running", "Complete", "Failed", "Error", and "Cancelled".
     * @required
     * @var string $phase public property
     */
    public $phase;

    /**
     * cancelled describes if a cancel event was triggered for the build.
     * @var bool|null $cancelled public property
     */
    public $cancelled;

    /**
     * completionTimestamp is a timestamp representing the server time when this Build was finished, whether that build failed or succeeded.  It reflects the time at which the Pod running the Build terminated. It is represented in RFC3339 form and is in UTC.
     * @var string|null $completionTimestamp public property
     */
    public $completionTimestamp;

    /**
     * config is an ObjectReference to the BuildConfig this Build is based on.
     * @var V1ObjectReference|null $config public property
     */
    public $config;

    /**
     * duration contains time.Duration object describing build time.
     * @var integer|null $duration public property
     */
    public $duration;

    /**
     * message is a human-readable message indicating details about why the build has this status.
     * @var string|null $message public property
     */
    public $message;

    /**
     * output describes the Docker image the build has produced.
     * @var V1BuildStatusOutput|null $output public property
     */
    public $output;

    /**
     * outputDockerImageReference contains a reference to the Docker image that will be built by this build. Its value is computed from Build.Spec.Output.To, and should include the registry address, so that it can be used to push and pull the image.
     * @var string|null $outputDockerImageReference public property
     */
    public $outputDockerImageReference;

    /**
     * reason is a brief CamelCase string that describes any failure and is meant for machine parsing and tidy display in the CLI.
     * @var string|null $reason public property
     */
    public $reason;

    /**
     * stages contains details about each stage that occurs during the build including start time, duration (in milliseconds), and the steps that occured within each stage.
     * @var V1StageInfo[]|null $stages public property
     */
    public $stages;

    /**
     * startTimestamp is a timestamp representing the server time when this Build started running in a Pod. It is represented in RFC3339 form and is in UTC.
     * @var string|null $startTimestamp public property
     */
    public $startTimestamp;

    /**
     * Constructor to set initial or default values of member properties
     * @param string              $phase                      Initialization value for $this->phase
     * @param bool                $cancelled                  Initialization value for $this->cancelled
     * @param string              $completionTimestamp        Initialization value for $this->completionTimestamp
     * @param V1ObjectReference   $config                     Initialization value for $this->config
     * @param integer             $duration                   Initialization value for $this->duration
     * @param string              $message                    Initialization value for $this->message
     * @param V1BuildStatusOutput $output                     Initialization value for $this->output
     * @param string              $outputDockerImageReference Initialization value for $this-
     *                                                          >outputDockerImageReference
     * @param string              $reason                     Initialization value for $this->reason
     * @param array               $stages                     Initialization value for $this->stages
     * @param string              $startTimestamp             Initialization value for $this->startTimestamp
     */
    public function __construct()
    {
        if (11 == func_num_args()) {
            $this->phase                      = func_get_arg(0);
            $this->cancelled                  = func_get_arg(1);
            $this->completionTimestamp        = func_get_arg(2);
            $this->config                     = func_get_arg(3);
            $this->duration                   = func_get_arg(4);
            $this->message                    = func_get_arg(5);
            $this->output                     = func_get_arg(6);
            $this->outputDockerImageReference = func_get_arg(7);
            $this->reason                     = func_get_arg(8);
            $this->stages                     = func_get_arg(9);
            $this->startTimestamp             = func_get_arg(10);
        }
    }


    /**
     * Encode this object to JSON
     */
    public function jsonSerialize()
    {
        $json = array();
        $json['phase']                      = $this->phase;
        $json['cancelled']                  = $this->cancelled;
        $json['completionTimestamp']        = $this->completionTimestamp;
        $json['config']                     = $this->config;
        $json['duration']                   = $this->duration;
        $json['message']                    = $this->message;
        $json['output']                     = $this->output;
        $json['outputDockerImageReference'] = $this->outputDockerImageReference;
        $json['reason']                     = $this->reason;
        $json['stages']                     = $this->stages;
        $json['startTimestamp']             = $this->startTimestamp;

        return $json;
    }
}
