<?php
/*
 * OpenShiftAPIWithKubernetesLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

namespace OpenShiftAPIWithKubernetesLib\Models;

use JsonSerializable;

/**
 * Event is a report of an event somewhere in the cluster.
 */
class V1Event implements JsonSerializable
{
    /**
     * The object that this event is about.
     * @required
     * @var V1ObjectReference $involvedObject public property
     */
    public $involvedObject;

    /**
     * Standard object's metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata
     * @required
     * @var V1ObjectMeta $metadata public property
     */
    public $metadata;

    /**
     * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources
     * @var string|null $apiVersion public property
     */
    public $apiVersion;

    /**
     * The number of times this event has occurred.
     * @var integer|null $count public property
     */
    public $count;

    /**
     * The time at which the event was first recorded. (Time of server receipt is in TypeMeta.)
     * @var string|null $firstTimestamp public property
     */
    public $firstTimestamp;

    /**
     * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds
     * @var string|null $kind public property
     */
    public $kind;

    /**
     * The time at which the most recent occurrence of this event was recorded.
     * @var string|null $lastTimestamp public property
     */
    public $lastTimestamp;

    /**
     * A human-readable description of the status of this operation.
     * @var string|null $message public property
     */
    public $message;

    /**
     * This should be a short, machine understandable string that gives the reason for the transition into the object's current status.
     * @var string|null $reason public property
     */
    public $reason;

    /**
     * The component reporting this event. Should be a short machine understandable string.
     * @var V1EventSource|null $source public property
     */
    public $source;

    /**
     * Type of this event (Normal, Warning), new types could be added in the future
     * @var string|null $type public property
     */
    public $type;

    /**
     * Constructor to set initial or default values of member properties
     * @param V1ObjectReference $involvedObject Initialization value for $this->involvedObject
     * @param V1ObjectMeta      $metadata       Initialization value for $this->metadata
     * @param string            $apiVersion     Initialization value for $this->apiVersion
     * @param integer           $count          Initialization value for $this->count
     * @param string            $firstTimestamp Initialization value for $this->firstTimestamp
     * @param string            $kind           Initialization value for $this->kind
     * @param string            $lastTimestamp  Initialization value for $this->lastTimestamp
     * @param string            $message        Initialization value for $this->message
     * @param string            $reason         Initialization value for $this->reason
     * @param V1EventSource     $source         Initialization value for $this->source
     * @param string            $type           Initialization value for $this->type
     */
    public function __construct()
    {
        if (11 == func_num_args()) {
            $this->involvedObject = func_get_arg(0);
            $this->metadata       = func_get_arg(1);
            $this->apiVersion     = func_get_arg(2);
            $this->count          = func_get_arg(3);
            $this->firstTimestamp = func_get_arg(4);
            $this->kind           = func_get_arg(5);
            $this->lastTimestamp  = func_get_arg(6);
            $this->message        = func_get_arg(7);
            $this->reason         = func_get_arg(8);
            $this->source         = func_get_arg(9);
            $this->type           = func_get_arg(10);
        }
    }


    /**
     * Encode this object to JSON
     */
    public function jsonSerialize()
    {
        $json = array();
        $json['involvedObject'] = $this->involvedObject;
        $json['metadata']       = $this->metadata;
        $json['apiVersion']     = $this->apiVersion;
        $json['count']          = $this->count;
        $json['firstTimestamp'] = $this->firstTimestamp;
        $json['kind']           = $this->kind;
        $json['lastTimestamp']  = $this->lastTimestamp;
        $json['message']        = $this->message;
        $json['reason']         = $this->reason;
        $json['source']         = $this->source;
        $json['type']           = $this->type;

        return $json;
    }
}
