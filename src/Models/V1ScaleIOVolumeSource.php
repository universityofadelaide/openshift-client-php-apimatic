<?php
/*
 * OpenShiftAPIWithKubernetesLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

namespace OpenShiftAPIWithKubernetesLib\Models;

use JsonSerializable;

/**
 * ScaleIOVolumeSource represents a persistent ScaleIO volume
 */
class V1ScaleIOVolumeSource implements JsonSerializable
{
    /**
     * The host address of the ScaleIO API Gateway.
     * @required
     * @var string $gateway public property
     */
    public $gateway;

    /**
     * SecretRef references to the secret for ScaleIO user and other sensitive information. If this is not provided, Login operation will fail.
     * @required
     * @var V1LocalObjectReference $secretRef public property
     */
    public $secretRef;

    /**
     * The name of the storage system as configured in ScaleIO.
     * @required
     * @var string $system public property
     */
    public $system;

    /**
     * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
     * @var string|null $fsType public property
     */
    public $fsType;

    /**
     * The name of the Protection Domain for the configured storage (defaults to "default").
     * @var string|null $protectionDomain public property
     */
    public $protectionDomain;

    /**
     * Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
     * @var bool|null $readOnly public property
     */
    public $readOnly;

    /**
     * Flag to enable/disable SSL communication with Gateway, default false
     * @var bool|null $sslEnabled public property
     */
    public $sslEnabled;

    /**
     * Indicates whether the storage for a volume should be thick or thin (defaults to "thin").
     * @var string|null $storageMode public property
     */
    public $storageMode;

    /**
     * The Storage Pool associated with the protection domain (defaults to "default").
     * @var string|null $storagePool public property
     */
    public $storagePool;

    /**
     * The name of a volume already created in the ScaleIO system that is associated with this volume source.
     * @var string|null $volumeName public property
     */
    public $volumeName;

    /**
     * Constructor to set initial or default values of member properties
     * @param string                 $gateway          Initialization value for $this->gateway
     * @param V1LocalObjectReference $secretRef        Initialization value for $this->secretRef
     * @param string                 $system           Initialization value for $this->system
     * @param string                 $fsType           Initialization value for $this->fsType
     * @param string                 $protectionDomain Initialization value for $this->protectionDomain
     * @param bool                   $readOnly         Initialization value for $this->readOnly
     * @param bool                   $sslEnabled       Initialization value for $this->sslEnabled
     * @param string                 $storageMode      Initialization value for $this->storageMode
     * @param string                 $storagePool      Initialization value for $this->storagePool
     * @param string                 $volumeName       Initialization value for $this->volumeName
     */
    public function __construct()
    {
        if (10 == func_num_args()) {
            $this->gateway          = func_get_arg(0);
            $this->secretRef        = func_get_arg(1);
            $this->system           = func_get_arg(2);
            $this->fsType           = func_get_arg(3);
            $this->protectionDomain = func_get_arg(4);
            $this->readOnly         = func_get_arg(5);
            $this->sslEnabled       = func_get_arg(6);
            $this->storageMode      = func_get_arg(7);
            $this->storagePool      = func_get_arg(8);
            $this->volumeName       = func_get_arg(9);
        }
    }


    /**
     * Encode this object to JSON
     */
    public function jsonSerialize()
    {
        $json = array();
        $json['gateway']          = $this->gateway;
        $json['secretRef']        = $this->secretRef;
        $json['system']           = $this->system;
        $json['fsType']           = $this->fsType;
        $json['protectionDomain'] = $this->protectionDomain;
        $json['readOnly']         = $this->readOnly;
        $json['sslEnabled']       = $this->sslEnabled;
        $json['storageMode']      = $this->storageMode;
        $json['storagePool']      = $this->storagePool;
        $json['volumeName']       = $this->volumeName;

        return $json;
    }
}
