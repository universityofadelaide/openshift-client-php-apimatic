<?php
/*
 * OpenShiftAPIWithKubernetesLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

namespace OpenShiftAPIWithKubernetesLib\Models;

use JsonSerializable;

/**
 * HTTPGetAction describes an action based on HTTP Get requests.
 */
class V1HTTPGetAction implements JsonSerializable
{
    /**
     * Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
     * @required
     * @var string $port public property
     */
    public $port;

    /**
     * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
     * @var string|null $host public property
     */
    public $host;

    /**
     * Custom headers to set in the request. HTTP allows repeated headers.
     * @var V1ImageLabel[]|null $httpHeaders public property
     */
    public $httpHeaders;

    /**
     * Path to access on the HTTP server.
     * @var string|null $path public property
     */
    public $path;

    /**
     * Scheme to use for connecting to the host. Defaults to HTTP.
     * @var string|null $scheme public property
     */
    public $scheme;

    /**
     * Constructor to set initial or default values of member properties
     * @param string $port        Initialization value for $this->port
     * @param string $host        Initialization value for $this->host
     * @param array  $httpHeaders Initialization value for $this->httpHeaders
     * @param string $path        Initialization value for $this->path
     * @param string $scheme      Initialization value for $this->scheme
     */
    public function __construct()
    {
        if (5 == func_num_args()) {
            $this->port        = func_get_arg(0);
            $this->host        = func_get_arg(1);
            $this->httpHeaders = func_get_arg(2);
            $this->path        = func_get_arg(3);
            $this->scheme      = func_get_arg(4);
        }
    }


    /**
     * Encode this object to JSON
     */
    public function jsonSerialize()
    {
        $json = array();
        $json['port']        = $this->port;
        $json['host']        = $this->host;
        $json['httpHeaders'] = $this->httpHeaders;
        $json['path']        = $this->path;
        $json['scheme']      = $this->scheme;

        return $json;
    }
}
