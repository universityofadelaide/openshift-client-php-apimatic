<?php
/*
 * OpenShiftAPIWithKubernetesLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

namespace OpenShiftAPIWithKubernetesLib\Models;

use JsonSerializable;

/**
 * ImageSource is used to describe build source that will be extracted from an image. A reference of
 * type ImageStreamTag, ImageStreamImage or DockerImage may be used. A pull secret can be specified to
 * pull the image from an external registry or override the default service account secret if pulling
 * from the internal registry. A list of paths to copy from the image and their respective destination
 * within the build directory must be specified in the paths array.
 */
class V1ImageSource implements JsonSerializable
{
    /**
     * from is a reference to an ImageStreamTag, ImageStreamImage, or DockerImage to copy source from.
     * @required
     * @var V1ObjectReference $from public property
     */
    public $from;

    /**
     * paths is a list of source and destination paths to copy from the image.
     * @required
     * @var V1ImageSourcePath[] $paths public property
     */
    public $paths;

    /**
     * pullSecret is a reference to a secret to be used to pull the image from a registry If the image is pulled from the OpenShift registry, this field does not need to be set.
     * @var V1LocalObjectReference|null $pullSecret public property
     */
    public $pullSecret;

    /**
     * Constructor to set initial or default values of member properties
     * @param V1ObjectReference      $from       Initialization value for $this->from
     * @param array                  $paths      Initialization value for $this->paths
     * @param V1LocalObjectReference $pullSecret Initialization value for $this->pullSecret
     */
    public function __construct()
    {
        if (3 == func_num_args()) {
            $this->from       = func_get_arg(0);
            $this->paths      = func_get_arg(1);
            $this->pullSecret = func_get_arg(2);
        }
    }


    /**
     * Encode this object to JSON
     */
    public function jsonSerialize()
    {
        $json = array();
        $json['from']       = $this->from;
        $json['paths']      = $this->paths;
        $json['pullSecret'] = $this->pullSecret;

        return $json;
    }
}
