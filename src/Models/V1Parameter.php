<?php
/*
 * OpenShiftAPIWithKubernetesLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

namespace OpenShiftAPIWithKubernetesLib\Models;

use JsonSerializable;

/**
 * Parameter defines a name/value variable that is to be processed during the Template to Config
 * transformation.
 */
class V1Parameter implements JsonSerializable
{
    /**
     * Name must be set and it can be referenced in Template Items using ${PARAMETER_NAME}. Required.
     * @required
     * @var string $name public property
     */
    public $name;

    /**
     * Description of a parameter. Optional.
     * @var string|null $description public property
     */
    public $description;

    /**
     * Optional: The name that will show in UI instead of parameter 'Name'
     * @var string|null $displayName public property
     */
    public $displayName;

    /**
     * From is an input value for the generator. Optional.
     * @var string|null $from public property
     */
    public $from;

    /**
     * generate specifies the generator to be used to generate random string from an input value specified by From field. The result string is stored into Value field. If empty, no generator is being used, leaving the result Value untouched. Optional.
     * The only supported generator is "expression", which accepts a "from" value in the form of a simple regular expression containing the range expression "[a-zA-Z0-9]", and the length expression "a{length}".
     * Examples:
     * from             | value ----------------------------- "test[0-9]{1}x"  | "test7x" "[0-1]{8}"       | "01001100" "0x[A-F0-9]{4}"  | "0xB3AF" "[a-zA-Z0-9]{8}" | "hW4yQU5i"
     * @var string|null $generate public property
     */
    public $generate;

    /**
     * Optional: Indicates the parameter must have a value.  Defaults to false.
     * @var bool|null $required public property
     */
    public $required;

    /**
     * Value holds the Parameter data. If specified, the generator will be ignored. The value replaces all occurrences of the Parameter ${Name} expression during the Template to Config transformation. Optional.
     * @var string|null $value public property
     */
    public $value;

    /**
     * Constructor to set initial or default values of member properties
     * @param string $name        Initialization value for $this->name
     * @param string $description Initialization value for $this->description
     * @param string $displayName Initialization value for $this->displayName
     * @param string $from        Initialization value for $this->from
     * @param string $generate    Initialization value for $this->generate
     * @param bool   $required    Initialization value for $this->required
     * @param string $value       Initialization value for $this->value
     */
    public function __construct()
    {
        if (7 == func_num_args()) {
            $this->name        = func_get_arg(0);
            $this->description = func_get_arg(1);
            $this->displayName = func_get_arg(2);
            $this->from        = func_get_arg(3);
            $this->generate    = func_get_arg(4);
            $this->required    = func_get_arg(5);
            $this->value       = func_get_arg(6);
        }
    }


    /**
     * Encode this object to JSON
     */
    public function jsonSerialize()
    {
        $json = array();
        $json['name']        = $this->name;
        $json['description'] = $this->description;
        $json['displayName'] = $this->displayName;
        $json['from']        = $this->from;
        $json['generate']    = $this->generate;
        $json['required']    = $this->required;
        $json['value']       = $this->value;

        return $json;
    }
}
