<?php
/*
 * OpenShiftAPIWithKubernetesLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

namespace OpenShiftAPIWithKubernetesLib\Models;

use JsonSerializable;

/**
 * Represents a Fibre Channel volume. Fibre Channel volumes can only be mounted as read/write once.
 * Fibre Channel volumes support ownership management and SELinux relabeling.
 */
class V1FCVolumeSource implements JsonSerializable
{
    /**
     * Required: FC target lun number
     * @required
     * @var integer $lun public property
     */
    public $lun;

    /**
     * Required: FC target worldwide names (WWNs)
     * @required
     * @var array $targetWWNs public property
     */
    public $targetWWNs;

    /**
     * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
     * @var string|null $fsType public property
     */
    public $fsType;

    /**
     * Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
     * @var bool|null $readOnly public property
     */
    public $readOnly;

    /**
     * Constructor to set initial or default values of member properties
     * @param integer $lun        Initialization value for $this->lun
     * @param array   $targetWWNs Initialization value for $this->targetWWNs
     * @param string  $fsType     Initialization value for $this->fsType
     * @param bool    $readOnly   Initialization value for $this->readOnly
     */
    public function __construct()
    {
        if (4 == func_num_args()) {
            $this->lun        = func_get_arg(0);
            $this->targetWWNs = func_get_arg(1);
            $this->fsType     = func_get_arg(2);
            $this->readOnly   = func_get_arg(3);
        }
    }


    /**
     * Encode this object to JSON
     */
    public function jsonSerialize()
    {
        $json = array();
        $json['lun']        = $this->lun;
        $json['targetWWNs'] = $this->targetWWNs;
        $json['fsType']     = $this->fsType;
        $json['readOnly']   = $this->readOnly;

        return $json;
    }
}
