<?php
/*
 * OpenShiftAPIWithKubernetesLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

namespace OpenShiftAPIWithKubernetesLib\Models;

use JsonSerializable;

/**
 * SecurityContextConstraints governs the ability to make requests that affect the SecurityContext that
 * will be applied to a container.
 */
class V1SecurityContextConstraints implements JsonSerializable
{
    /**
     * AllowHostDirVolumePlugin determines if the policy allow containers to use the HostDir volume plugin
     * @required
     * @var bool $allowHostDirVolumePlugin public property
     */
    public $allowHostDirVolumePlugin;

    /**
     * AllowHostIPC determines if the policy allows host ipc in the containers.
     * @required
     * @var bool $allowHostIPC public property
     */
    public $allowHostIPC;

    /**
     * AllowHostNetwork determines if the policy allows the use of HostNetwork in the pod spec.
     * @required
     * @var bool $allowHostNetwork public property
     */
    public $allowHostNetwork;

    /**
     * AllowHostPID determines if the policy allows host pid in the containers.
     * @required
     * @var bool $allowHostPID public property
     */
    public $allowHostPID;

    /**
     * AllowHostPorts determines if the policy allows host ports in the containers.
     * @required
     * @var bool $allowHostPorts public property
     */
    public $allowHostPorts;

    /**
     * AllowPrivilegedContainer determines if a container can request to be run as privileged.
     * @required
     * @var bool $allowPrivilegedContainer public property
     */
    public $allowPrivilegedContainer;

    /**
     * AllowedCapabilities is a list of capabilities that can be requested to add to the container. Capabilities in this field maybe added at the pod author's discretion. You must not list a capability in both AllowedCapabilities and RequiredDropCapabilities. To allow all capabilities you may use '*'.
     * @required
     * @var array $allowedCapabilities public property
     */
    public $allowedCapabilities;

    /**
     * DefaultAddCapabilities is the default set of capabilities that will be added to the container unless the pod spec specifically drops the capability.  You may not list a capabiility in both DefaultAddCapabilities and RequiredDropCapabilities.
     * @required
     * @var array $defaultAddCapabilities public property
     */
    public $defaultAddCapabilities;

    /**
     * Priority influences the sort order of SCCs when evaluating which SCCs to try first for a given pod request based on access in the Users and Groups fields.  The higher the int, the higher priority.  If scores for multiple SCCs are equal they will be sorted by name.
     * @required
     * @var integer $priority public property
     */
    public $priority;

    /**
     * ReadOnlyRootFilesystem when set to true will force containers to run with a read only root file system.  If the container specifically requests to run with a non-read only root file system the SCC should deny the pod. If set to false the container may run with a read only root file system if it wishes but it will not be forced to.
     * @required
     * @var bool $readOnlyRootFilesystem public property
     */
    public $readOnlyRootFilesystem;

    /**
     * RequiredDropCapabilities are the capabilities that will be dropped from the container.  These are required to be dropped and cannot be added.
     * @required
     * @var array $requiredDropCapabilities public property
     */
    public $requiredDropCapabilities;

    /**
     * Volumes is a white list of allowed volume plugins.  FSType corresponds directly with the field names of a VolumeSource (azureFile, configMap, emptyDir).  To allow all volumes you may use '*'.
     * @required
     * @var array $volumes public property
     */
    public $volumes;

    /**
     * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources
     * @var string|null $apiVersion public property
     */
    public $apiVersion;

    /**
     * FSGroup is the strategy that will dictate what fs group is used by the SecurityContext.
     * @var V1FSGroupStrategyOptions|null $fsGroup public property
     */
    public $fsGroup;

    /**
     * The groups that have permission to use this security context constraints
     * @var array|null $groups public property
     */
    public $groups;

    /**
     * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds
     * @var string|null $kind public property
     */
    public $kind;

    /**
     * Standard object's metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata
     * @var V1ObjectMeta|null $metadata public property
     */
    public $metadata;

    /**
     * RunAsUser is the strategy that will dictate what RunAsUser is used in the SecurityContext.
     * @var V1RunAsUserStrategyOptions|null $runAsUser public property
     */
    public $runAsUser;

    /**
     * SELinuxContext is the strategy that will dictate what labels will be set in the SecurityContext.
     * @var V1SELinuxContextStrategyOptions|null $seLinuxContext public property
     */
    public $seLinuxContext;

    /**
     * SeccompProfiles lists the allowed profiles that may be set for the pod or container's seccomp annotations.  An unset (nil) or empty value means that no profiles may be specifid by the pod or container.	The wildcard '*' may be used to allow all profiles.  When used to generate a value for a pod the first non-wildcard profile will be used as the default.
     * @var array|null $seccompProfiles public property
     */
    public $seccompProfiles;

    /**
     * SupplementalGroups is the strategy that will dictate what supplemental groups are used by the SecurityContext.
     * @var V1FSGroupStrategyOptions|null $supplementalGroups public property
     */
    public $supplementalGroups;

    /**
     * The users who have permissions to use this security context constraints
     * @var array|null $users public property
     */
    public $users;

    /**
     * Constructor to set initial or default values of member properties
     * @param bool                            $allowHostDirVolumePlugin Initialization value for $this-
     *                                                                    >allowHostDirVolumePlugin
     * @param bool                            $allowHostIPC             Initialization value for $this->allowHostIPC
     * @param bool                            $allowHostNetwork         Initialization value for $this-
     *                                                                    >allowHostNetwork
     * @param bool                            $allowHostPID             Initialization value for $this->allowHostPID
     * @param bool                            $allowHostPorts           Initialization value for $this-
     *                                                                    >allowHostPorts
     * @param bool                            $allowPrivilegedContainer Initialization value for $this-
     *                                                                    >allowPrivilegedContainer
     * @param array                           $allowedCapabilities      Initialization value for $this-
     *                                                                    >allowedCapabilities
     * @param array                           $defaultAddCapabilities   Initialization value for $this-
     *                                                                    >defaultAddCapabilities
     * @param integer                         $priority                 Initialization value for $this->priority
     * @param bool                            $readOnlyRootFilesystem   Initialization value for $this-
     *                                                                    >readOnlyRootFilesystem
     * @param array                           $requiredDropCapabilities Initialization value for $this-
     *                                                                    >requiredDropCapabilities
     * @param array                           $volumes                  Initialization value for $this->volumes
     * @param string                          $apiVersion               Initialization value for $this->apiVersion
     * @param V1FSGroupStrategyOptions        $fsGroup                  Initialization value for $this->fsGroup
     * @param array                           $groups                   Initialization value for $this->groups
     * @param string                          $kind                     Initialization value for $this->kind
     * @param V1ObjectMeta                    $metadata                 Initialization value for $this->metadata
     * @param V1RunAsUserStrategyOptions      $runAsUser                Initialization value for $this->runAsUser
     * @param V1SELinuxContextStrategyOptions $seLinuxContext           Initialization value for $this-
     *                                                                    >seLinuxContext
     * @param array                           $seccompProfiles          Initialization value for $this-
     *                                                                    >seccompProfiles
     * @param V1FSGroupStrategyOptions        $supplementalGroups       Initialization value for $this-
     *                                                                    >supplementalGroups
     * @param array                           $users                    Initialization value for $this->users
     */
    public function __construct()
    {
        if (22 == func_num_args()) {
            $this->allowHostDirVolumePlugin = func_get_arg(0);
            $this->allowHostIPC             = func_get_arg(1);
            $this->allowHostNetwork         = func_get_arg(2);
            $this->allowHostPID             = func_get_arg(3);
            $this->allowHostPorts           = func_get_arg(4);
            $this->allowPrivilegedContainer = func_get_arg(5);
            $this->allowedCapabilities      = func_get_arg(6);
            $this->defaultAddCapabilities   = func_get_arg(7);
            $this->priority                 = func_get_arg(8);
            $this->readOnlyRootFilesystem   = func_get_arg(9);
            $this->requiredDropCapabilities = func_get_arg(10);
            $this->volumes                  = func_get_arg(11);
            $this->apiVersion               = func_get_arg(12);
            $this->fsGroup                  = func_get_arg(13);
            $this->groups                   = func_get_arg(14);
            $this->kind                     = func_get_arg(15);
            $this->metadata                 = func_get_arg(16);
            $this->runAsUser                = func_get_arg(17);
            $this->seLinuxContext           = func_get_arg(18);
            $this->seccompProfiles          = func_get_arg(19);
            $this->supplementalGroups       = func_get_arg(20);
            $this->users                    = func_get_arg(21);
        }
    }


    /**
     * Encode this object to JSON
     */
    public function jsonSerialize()
    {
        $json = array();
        $json['allowHostDirVolumePlugin'] = $this->allowHostDirVolumePlugin;
        $json['allowHostIPC']             = $this->allowHostIPC;
        $json['allowHostNetwork']         = $this->allowHostNetwork;
        $json['allowHostPID']             = $this->allowHostPID;
        $json['allowHostPorts']           = $this->allowHostPorts;
        $json['allowPrivilegedContainer'] = $this->allowPrivilegedContainer;
        $json['allowedCapabilities']      = $this->allowedCapabilities;
        $json['defaultAddCapabilities']   = $this->defaultAddCapabilities;
        $json['priority']                 = $this->priority;
        $json['readOnlyRootFilesystem']   = $this->readOnlyRootFilesystem;
        $json['requiredDropCapabilities'] = $this->requiredDropCapabilities;
        $json['volumes']                  = $this->volumes;
        $json['apiVersion']               = $this->apiVersion;
        $json['fsGroup']                  = $this->fsGroup;
        $json['groups']                   = $this->groups;
        $json['kind']                     = $this->kind;
        $json['metadata']                 = $this->metadata;
        $json['runAsUser']                = $this->runAsUser;
        $json['seLinuxContext']           = $this->seLinuxContext;
        $json['seccompProfiles']          = $this->seccompProfiles;
        $json['supplementalGroups']       = $this->supplementalGroups;
        $json['users']                    = $this->users;

        return $json;
    }
}
