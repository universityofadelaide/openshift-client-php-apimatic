<?php
/*
 * OpenShiftAPIWithKubernetesLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

namespace OpenShiftAPIWithKubernetesLib\Models;

use JsonSerializable;

/**
 * Subject contains a reference to the object or user identities a role binding applies to.  This can
 * either hold a direct API object reference, or a value for non-objects such as user and group names.
 */
class V1beta1Subject implements JsonSerializable
{
    /**
     * Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
     * @required
     * @var string $kind public property
     */
    public $kind;

    /**
     * Name of the object being referenced.
     * @required
     * @var string $name public property
     */
    public $name;

    /**
     * APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
     * @var string|null $apiGroup public property
     */
    public $apiGroup;

    /**
     * Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
     * @maps namespace
     * @var string|null $mnamespace public property
     */
    public $mnamespace;

    /**
     * Constructor to set initial or default values of member properties
     * @param string $kind       Initialization value for $this->kind
     * @param string $name       Initialization value for $this->name
     * @param string $apiGroup   Initialization value for $this->apiGroup
     * @param string $mnamespace Initialization value for $this->mnamespace
     */
    public function __construct()
    {
        if (4 == func_num_args()) {
            $this->kind       = func_get_arg(0);
            $this->name       = func_get_arg(1);
            $this->apiGroup   = func_get_arg(2);
            $this->mnamespace = func_get_arg(3);
        }
    }


    /**
     * Encode this object to JSON
     */
    public function jsonSerialize()
    {
        $json = array();
        $json['kind']      = $this->kind;
        $json['name']      = $this->name;
        $json['apiGroup']  = $this->apiGroup;
        $json['namespace'] = $this->mnamespace;

        return $json;
    }
}
