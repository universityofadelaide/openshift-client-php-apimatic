<?php
/*
 * OpenShiftAPIWithKubernetesLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

namespace OpenShiftAPIWithKubernetesLib\Models;

use JsonSerializable;

/**
 * Volume represents a named volume in a pod that may be accessed by any container in the pod.
 */
class V1Volume implements JsonSerializable
{
    /**
     * Volume's name. Must be a DNS_LABEL and unique within the pod. More info: http://kubernetes.io/docs/user-guide/identifiers#names
     * @required
     * @var string $name public property
     */
    public $name;

    /**
     * AWSElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: http://kubernetes.io/docs/user-guide/volumes#awselasticblockstore
     * @var V1AWSElasticBlockStoreVolumeSource|null $awsElasticBlockStore public property
     */
    public $awsElasticBlockStore;

    /**
     * AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
     * @var V1AzureDiskVolumeSource|null $azureDisk public property
     */
    public $azureDisk;

    /**
     * AzureFile represents an Azure File Service mount on the host and bind mount to the pod.
     * @var V1AzureFileVolumeSource|null $azureFile public property
     */
    public $azureFile;

    /**
     * CephFS represents a Ceph FS mount on the host that shares a pod's lifetime
     * @var V1CephFSVolumeSource|null $cephfs public property
     */
    public $cephfs;

    /**
     * Cinder represents a cinder volume attached and mounted on kubelets host machine More info: http://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md
     * @var V1CinderVolumeSource|null $cinder public property
     */
    public $cinder;

    /**
     * ConfigMap represents a configMap that should populate this volume
     * @var V1ConfigMapVolumeSource|null $configMap public property
     */
    public $configMap;

    /**
     * DownwardAPI represents downward API about the pod that should populate this volume
     * @var V1DownwardAPIVolumeSource|null $downwardAPI public property
     */
    public $downwardAPI;

    /**
     * EmptyDir represents a temporary directory that shares a pod's lifetime. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir
     * @var V1EmptyDirVolumeSource|null $emptyDir public property
     */
    public $emptyDir;

    /**
     * FC represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.
     * @var V1FCVolumeSource|null $fc public property
     */
    public $fc;

    /**
     * FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin. This is an alpha feature and may change in future.
     * @var V1FlexVolumeSource|null $flexVolume public property
     */
    public $flexVolume;

    /**
     * Flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running
     * @var V1FlockerVolumeSource|null $flocker public property
     */
    public $flocker;

    /**
     * GCEPersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk
     * @var V1GCEPersistentDiskVolumeSource|null $gcePersistentDisk public property
     */
    public $gcePersistentDisk;

    /**
     * GitRepo represents a git repository at a particular revision.
     * @var V1GitRepoVolumeSource|null $gitRepo public property
     */
    public $gitRepo;

    /**
     * Glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime. More info: http://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md
     * @var V1GlusterfsVolumeSource|null $glusterfs public property
     */
    public $glusterfs;

    /**
     * HostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container. This is generally used for system agents or other privileged things that are allowed to see the host machine. Most containers will NOT need this. More info: http://kubernetes.io/docs/user-guide/volumes#hostpath
     * @var V1HostPathVolumeSource|null $hostPath public property
     */
    public $hostPath;

    /**
     * ISCSI represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: http://releases.k8s.io/HEAD/examples/volumes/iscsi/README.md
     * @var V1ISCSIVolumeSource|null $iscsi public property
     */
    public $iscsi;

    /**
     * Metadata represents metadata about the pod that should populate this volume Deprecated: Use downwardAPI instead.
     * @var V1DeprecatedDownwardAPIVolumeSource|null $metadata public property
     */
    public $metadata;

    /**
     * NFS represents an NFS mount on the host that shares a pod's lifetime More info: http://kubernetes.io/docs/user-guide/volumes#nfs
     * @var V1NFSVolumeSource|null $nfs public property
     */
    public $nfs;

    /**
     * PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#persistentvolumeclaims
     * @var V1PersistentVolumeClaimVolumeSource|null $persistentVolumeClaim public property
     */
    public $persistentVolumeClaim;

    /**
     * PhotonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine
     * @var V1PhotonPersistentDiskVolumeSource|null $photonPersistentDisk public property
     */
    public $photonPersistentDisk;

    /**
     * PortworxVolume represents a portworx volume attached and mounted on kubelets host machine
     * @var V1CinderVolumeSource|null $portworxVolume public property
     */
    public $portworxVolume;

    /**
     * Items for all in one resources secrets, configmaps, and downward API
     * @var V1ProjectedVolumeSource|null $projected public property
     */
    public $projected;

    /**
     * Quobyte represents a Quobyte mount on the host that shares a pod's lifetime
     * @var V1QuobyteVolumeSource|null $quobyte public property
     */
    public $quobyte;

    /**
     * RBD represents a Rados Block Device mount on the host that shares a pod's lifetime. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md
     * @var V1RBDVolumeSource|null $rbd public property
     */
    public $rbd;

    /**
     * ScaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.
     * @var V1ScaleIOVolumeSource|null $scaleIO public property
     */
    public $scaleIO;

    /**
     * Secret represents a secret that should populate this volume. More info: http://kubernetes.io/docs/user-guide/volumes#secrets
     * @var V1SecretVolumeSource|null $secret public property
     */
    public $secret;

    /**
     * VsphereVolume represents a vSphere volume attached and mounted on kubelets host machine
     * @var V1VsphereVirtualDiskVolumeSource|null $vsphereVolume public property
     */
    public $vsphereVolume;

    /**
     * Constructor to set initial or default values of member properties
     * @param string                              $name                  Initialization value for $this->name
     * @param V1AWSElasticBlockStoreVolumeSource  $awsElasticBlockStore  Initialization value for $this-
     *                                                                     >awsElasticBlockStore
     * @param V1AzureDiskVolumeSource             $azureDisk             Initialization value for $this->azureDisk
     * @param V1AzureFileVolumeSource             $azureFile             Initialization value for $this->azureFile
     * @param V1CephFSVolumeSource                $cephfs                Initialization value for $this->cephfs
     * @param V1CinderVolumeSource                $cinder                Initialization value for $this->cinder
     * @param V1ConfigMapVolumeSource             $configMap             Initialization value for $this->configMap
     * @param V1DownwardAPIVolumeSource           $downwardAPI           Initialization value for $this->downwardAPI
     * @param V1EmptyDirVolumeSource              $emptyDir              Initialization value for $this->emptyDir
     * @param V1FCVolumeSource                    $fc                    Initialization value for $this->fc
     * @param V1FlexVolumeSource                  $flexVolume            Initialization value for $this->flexVolume
     * @param V1FlockerVolumeSource               $flocker               Initialization value for $this->flocker
     * @param V1GCEPersistentDiskVolumeSource     $gcePersistentDisk     Initialization value for $this-
     *                                                                     >gcePersistentDisk
     * @param V1GitRepoVolumeSource               $gitRepo               Initialization value for $this->gitRepo
     * @param V1GlusterfsVolumeSource             $glusterfs             Initialization value for $this->glusterfs
     * @param V1HostPathVolumeSource              $hostPath              Initialization value for $this->hostPath
     * @param V1ISCSIVolumeSource                 $iscsi                 Initialization value for $this->iscsi
     * @param V1DeprecatedDownwardAPIVolumeSource $metadata              Initialization value for $this->metadata
     * @param V1NFSVolumeSource                   $nfs                   Initialization value for $this->nfs
     * @param V1PersistentVolumeClaimVolumeSource $persistentVolumeClaim Initialization value for $this-
     *                                                                     >persistentVolumeClaim
     * @param V1PhotonPersistentDiskVolumeSource  $photonPersistentDisk  Initialization value for $this-
     *                                                                     >photonPersistentDisk
     * @param V1CinderVolumeSource                $portworxVolume        Initialization value for $this-
     *                                                                     >portworxVolume
     * @param V1ProjectedVolumeSource             $projected             Initialization value for $this->projected
     * @param V1QuobyteVolumeSource               $quobyte               Initialization value for $this->quobyte
     * @param V1RBDVolumeSource                   $rbd                   Initialization value for $this->rbd
     * @param V1ScaleIOVolumeSource               $scaleIO               Initialization value for $this->scaleIO
     * @param V1SecretVolumeSource                $secret                Initialization value for $this->secret
     * @param V1VsphereVirtualDiskVolumeSource    $vsphereVolume         Initialization value for $this-
     *                                                                     >vsphereVolume
     */
    public function __construct()
    {
        if (28 == func_num_args()) {
            $this->name                  = func_get_arg(0);
            $this->awsElasticBlockStore  = func_get_arg(1);
            $this->azureDisk             = func_get_arg(2);
            $this->azureFile             = func_get_arg(3);
            $this->cephfs                = func_get_arg(4);
            $this->cinder                = func_get_arg(5);
            $this->configMap             = func_get_arg(6);
            $this->downwardAPI           = func_get_arg(7);
            $this->emptyDir              = func_get_arg(8);
            $this->fc                    = func_get_arg(9);
            $this->flexVolume            = func_get_arg(10);
            $this->flocker               = func_get_arg(11);
            $this->gcePersistentDisk     = func_get_arg(12);
            $this->gitRepo               = func_get_arg(13);
            $this->glusterfs             = func_get_arg(14);
            $this->hostPath              = func_get_arg(15);
            $this->iscsi                 = func_get_arg(16);
            $this->metadata              = func_get_arg(17);
            $this->nfs                   = func_get_arg(18);
            $this->persistentVolumeClaim = func_get_arg(19);
            $this->photonPersistentDisk  = func_get_arg(20);
            $this->portworxVolume        = func_get_arg(21);
            $this->projected             = func_get_arg(22);
            $this->quobyte               = func_get_arg(23);
            $this->rbd                   = func_get_arg(24);
            $this->scaleIO               = func_get_arg(25);
            $this->secret                = func_get_arg(26);
            $this->vsphereVolume         = func_get_arg(27);
        }
    }


    /**
     * Encode this object to JSON
     */
    public function jsonSerialize()
    {
        $json = array();
        $json['name']                  = $this->name;
        $json['awsElasticBlockStore']  = $this->awsElasticBlockStore;
        $json['azureDisk']             = $this->azureDisk;
        $json['azureFile']             = $this->azureFile;
        $json['cephfs']                = $this->cephfs;
        $json['cinder']                = $this->cinder;
        $json['configMap']             = $this->configMap;
        $json['downwardAPI']           = $this->downwardAPI;
        $json['emptyDir']              = $this->emptyDir;
        $json['fc']                    = $this->fc;
        $json['flexVolume']            = $this->flexVolume;
        $json['flocker']               = $this->flocker;
        $json['gcePersistentDisk']     = $this->gcePersistentDisk;
        $json['gitRepo']               = $this->gitRepo;
        $json['glusterfs']             = $this->glusterfs;
        $json['hostPath']              = $this->hostPath;
        $json['iscsi']                 = $this->iscsi;
        $json['metadata']              = $this->metadata;
        $json['nfs']                   = $this->nfs;
        $json['persistentVolumeClaim'] = $this->persistentVolumeClaim;
        $json['photonPersistentDisk']  = $this->photonPersistentDisk;
        $json['portworxVolume']        = $this->portworxVolume;
        $json['projected']             = $this->projected;
        $json['quobyte']               = $this->quobyte;
        $json['rbd']                   = $this->rbd;
        $json['scaleIO']               = $this->scaleIO;
        $json['secret']                = $this->secret;
        $json['vsphereVolume']         = $this->vsphereVolume;

        return $json;
    }
}
