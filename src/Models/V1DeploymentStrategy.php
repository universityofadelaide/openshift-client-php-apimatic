<?php
/*
 * OpenShiftAPIWithKubernetesLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

namespace OpenShiftAPIWithKubernetesLib\Models;

use JsonSerializable;

/**
 * DeploymentStrategy describes how to perform a deployment.
 */
class V1DeploymentStrategy implements JsonSerializable
{
    /**
     * ActiveDeadlineSeconds is the duration in seconds that the deployer pods for this deployment config may be active on a node before the system actively tries to terminate them.
     * @var integer|null $activeDeadlineSeconds public property
     */
    public $activeDeadlineSeconds;

    /**
     * Annotations is a set of key, value pairs added to custom deployer and lifecycle pre/post hook pods.
     * @var array|null $annotations public property
     */
    public $annotations;

    /**
     * CustomParams are the input to the Custom deployment strategy, and may also be specified for the Recreate and Rolling strategies to customize the execution process that runs the deployment.
     * @var V1CustomDeploymentStrategyParams|null $customParams public property
     */
    public $customParams;

    /**
     * Labels is a set of key, value pairs added to custom deployer and lifecycle pre/post hook pods.
     * @var array|null $labels public property
     */
    public $labels;

    /**
     * RecreateParams are the input to the Recreate deployment strategy.
     * @var V1RecreateDeploymentStrategyParams|null $recreateParams public property
     */
    public $recreateParams;

    /**
     * Resources contains resource requirements to execute the deployment and any hooks.
     * @var V1ResourceRequirements|null $resources public property
     */
    public $resources;

    /**
     * RollingParams are the input to the Rolling deployment strategy.
     * @var V1RollingDeploymentStrategyParams|null $rollingParams public property
     */
    public $rollingParams;

    /**
     * Type is the name of a deployment strategy.
     * @var string|null $type public property
     */
    public $type;

    /**
     * Constructor to set initial or default values of member properties
     * @param integer                            $activeDeadlineSeconds Initialization value for $this-
     *                                                                    >activeDeadlineSeconds
     * @param array                              $annotations           Initialization value for $this->annotations
     * @param V1CustomDeploymentStrategyParams   $customParams          Initialization value for $this->customParams
     * @param array                              $labels                Initialization value for $this->labels
     * @param V1RecreateDeploymentStrategyParams $recreateParams        Initialization value for $this-
     *                                                                    >recreateParams
     * @param V1ResourceRequirements             $resources             Initialization value for $this->resources
     * @param V1RollingDeploymentStrategyParams  $rollingParams         Initialization value for $this->rollingParams
     * @param string                             $type                  Initialization value for $this->type
     */
    public function __construct()
    {
        if (8 == func_num_args()) {
            $this->activeDeadlineSeconds = func_get_arg(0);
            $this->annotations           = func_get_arg(1);
            $this->customParams          = func_get_arg(2);
            $this->labels                = func_get_arg(3);
            $this->recreateParams        = func_get_arg(4);
            $this->resources             = func_get_arg(5);
            $this->rollingParams         = func_get_arg(6);
            $this->type                  = func_get_arg(7);
        }
    }


    /**
     * Encode this object to JSON
     */
    public function jsonSerialize()
    {
        $json = array();
        $json['activeDeadlineSeconds'] = $this->activeDeadlineSeconds;
        $json['annotations']           = $this->annotations;
        $json['customParams']          = $this->customParams;
        $json['labels']                = $this->labels;
        $json['recreateParams']        = $this->recreateParams;
        $json['resources']             = $this->resources;
        $json['rollingParams']         = $this->rollingParams;
        $json['type']                  = $this->type;

        return $json;
    }
}
