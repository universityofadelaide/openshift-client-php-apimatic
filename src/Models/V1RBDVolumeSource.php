<?php
/*
 * OpenShiftAPIWithKubernetesLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

namespace OpenShiftAPIWithKubernetesLib\Models;

use JsonSerializable;

/**
 * Represents a Rados Block Device mount that lasts the lifetime of a pod. RBD volumes support
 * ownership management and SELinux relabeling.
 */
class V1RBDVolumeSource implements JsonSerializable
{
    /**
     * The rados image name. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
     * @required
     * @var string $image public property
     */
    public $image;

    /**
     * A collection of Ceph monitors. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
     * @required
     * @var array $monitors public property
     */
    public $monitors;

    /**
     * Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#rbd
     * @var string|null $fsType public property
     */
    public $fsType;

    /**
     * Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
     * @var string|null $keyring public property
     */
    public $keyring;

    /**
     * The rados pool name. Default is rbd. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it.
     * @var string|null $pool public property
     */
    public $pool;

    /**
     * ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
     * @var bool|null $readOnly public property
     */
    public $readOnly;

    /**
     * SecretRef is name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
     * @var V1LocalObjectReference|null $secretRef public property
     */
    public $secretRef;

    /**
     * The rados user name. Default is admin. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
     * @var string|null $user public property
     */
    public $user;

    /**
     * Constructor to set initial or default values of member properties
     * @param string                 $image     Initialization value for $this->image
     * @param array                  $monitors  Initialization value for $this->monitors
     * @param string                 $fsType    Initialization value for $this->fsType
     * @param string                 $keyring   Initialization value for $this->keyring
     * @param string                 $pool      Initialization value for $this->pool
     * @param bool                   $readOnly  Initialization value for $this->readOnly
     * @param V1LocalObjectReference $secretRef Initialization value for $this->secretRef
     * @param string                 $user      Initialization value for $this->user
     */
    public function __construct()
    {
        if (8 == func_num_args()) {
            $this->image     = func_get_arg(0);
            $this->monitors  = func_get_arg(1);
            $this->fsType    = func_get_arg(2);
            $this->keyring   = func_get_arg(3);
            $this->pool      = func_get_arg(4);
            $this->readOnly  = func_get_arg(5);
            $this->secretRef = func_get_arg(6);
            $this->user      = func_get_arg(7);
        }
    }


    /**
     * Encode this object to JSON
     */
    public function jsonSerialize()
    {
        $json = array();
        $json['image']     = $this->image;
        $json['monitors']  = $this->monitors;
        $json['fsType']    = $this->fsType;
        $json['keyring']   = $this->keyring;
        $json['pool']      = $this->pool;
        $json['readOnly']  = $this->readOnly;
        $json['secretRef'] = $this->secretRef;
        $json['user']      = $this->user;

        return $json;
    }
}
