<?php
/*
 * OpenShiftAPIWithKubernetesLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

namespace OpenShiftAPIWithKubernetesLib\Models;

use JsonSerializable;

/**
 * Identity records a successful authentication of a user with an identity provider. The information
 * about the source of authentication is stored on the identity, and the identity is then associated
 * with a single user object. Multiple identities can reference a single user. Information retrieved
 * from the authentication provider is stored in the extra field using a schema determined by the
 * provider.
 */
class V1Identity implements JsonSerializable
{
    /**
     * ProviderName is the source of identity information
     * @required
     * @var string $providerName public property
     */
    public $providerName;

    /**
     * ProviderUserName uniquely represents this identity in the scope of the provider
     * @required
     * @var string $providerUserName public property
     */
    public $providerUserName;

    /**
     * User is a reference to the user this identity is associated with Both Name and UID must be set
     * @required
     * @var V1ObjectReference $user public property
     */
    public $user;

    /**
     * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources
     * @var string|null $apiVersion public property
     */
    public $apiVersion;

    /**
     * Extra holds extra information about this identity
     * @var array|null $extra public property
     */
    public $extra;

    /**
     * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds
     * @var string|null $kind public property
     */
    public $kind;

    /**
     * Standard object's metadata.
     * @var V1ObjectMeta|null $metadata public property
     */
    public $metadata;

    /**
     * Constructor to set initial or default values of member properties
     * @param string            $providerName     Initialization value for $this->providerName
     * @param string            $providerUserName Initialization value for $this->providerUserName
     * @param V1ObjectReference $user             Initialization value for $this->user
     * @param string            $apiVersion       Initialization value for $this->apiVersion
     * @param array             $extra            Initialization value for $this->extra
     * @param string            $kind             Initialization value for $this->kind
     * @param V1ObjectMeta      $metadata         Initialization value for $this->metadata
     */
    public function __construct()
    {
        if (7 == func_num_args()) {
            $this->providerName     = func_get_arg(0);
            $this->providerUserName = func_get_arg(1);
            $this->user             = func_get_arg(2);
            $this->apiVersion       = func_get_arg(3);
            $this->extra            = func_get_arg(4);
            $this->kind             = func_get_arg(5);
            $this->metadata         = func_get_arg(6);
        }
    }


    /**
     * Encode this object to JSON
     */
    public function jsonSerialize()
    {
        $json = array();
        $json['providerName']     = $this->providerName;
        $json['providerUserName'] = $this->providerUserName;
        $json['user']             = $this->user;
        $json['apiVersion']       = $this->apiVersion;
        $json['extra']            = $this->extra;
        $json['kind']             = $this->kind;
        $json['metadata']         = $this->metadata;

        return $json;
    }
}
