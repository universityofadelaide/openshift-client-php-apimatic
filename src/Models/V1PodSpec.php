<?php
/*
 * OpenShiftAPIWithKubernetesLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

namespace OpenShiftAPIWithKubernetesLib\Models;

use JsonSerializable;

/**
 * PodSpec is a description of a pod.
 */
class V1PodSpec implements JsonSerializable
{
    /**
     * List of containers belonging to the pod. Containers cannot currently be added or removed. There must be at least one container in a Pod. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers
     * @required
     * @var V1Container[] $containers public property
     */
    public $containers;

    /**
     * Optional duration in seconds the pod may be active on the node relative to StartTime before the system will actively try to mark it failed and kill associated containers. Value must be a positive integer.
     * @var integer|null $activeDeadlineSeconds public property
     */
    public $activeDeadlineSeconds;

    /**
     * If specified, the pod's scheduling constraints
     * @var V1Affinity|null $affinity public property
     */
    public $affinity;

    /**
     * AutomountServiceAccountToken indicates whether a service account token should be automatically mounted.
     * @var bool|null $automountServiceAccountToken public property
     */
    public $automountServiceAccountToken;

    /**
     * Set DNS policy for containers within the pod. One of 'ClusterFirstWithHostNet', 'ClusterFirst' or 'Default'. Defaults to "ClusterFirst". To have DNS options set along with hostNetwork, you have to specify DNS policy explicitly to 'ClusterFirstWithHostNet'.
     * @var string|null $dnsPolicy public property
     */
    public $dnsPolicy;

    /**
     * Use the host's ipc namespace. Optional: Default to false.
     * @var bool|null $hostIPC public property
     */
    public $hostIPC;

    /**
     * Host networking requested for this pod. Use the host's network namespace. If this option is set, the ports that will be used must be specified. Default to false.
     * @var bool|null $hostNetwork public property
     */
    public $hostNetwork;

    /**
     * Use the host's pid namespace. Optional: Default to false.
     * @var bool|null $hostPID public property
     */
    public $hostPID;

    /**
     * Specifies the hostname of the Pod If not specified, the pod's hostname will be set to a system-defined value.
     * @var string|null $hostname public property
     */
    public $hostname;

    /**
     * ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec. If specified, these secrets will be passed to individual puller implementations for them to use. For example, in the case of docker, only DockerConfig type secrets are honored. More info: http://kubernetes.io/docs/user-guide/images#specifying-imagepullsecrets-on-a-pod
     * @var V1LocalObjectReference[]|null $imagePullSecrets public property
     */
    public $imagePullSecrets;

    /**
     * List of initialization containers belonging to the pod. Init containers are executed in order prior to containers being started. If any init container fails, the pod is considered to have failed and is handled according to its restartPolicy. The name for an init container or normal container must be unique among all containers. Init containers may not have Lifecycle actions, Readiness probes, or Liveness probes. The resourceRequirements of an init container are taken into account during scheduling by finding the highest request/limit for each resource type, and then using the max of of that value or the sum of the normal containers. Limits are applied to init containers in a similar fashion. Init containers cannot currently be added or removed. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers
     * @var V1Container[]|null $initContainers public property
     */
    public $initContainers;

    /**
     * NodeName is a request to schedule this pod onto a specific node. If it is non-empty, the scheduler simply schedules this pod onto that node, assuming that it fits resource requirements.
     * @var string|null $nodeName public property
     */
    public $nodeName;

    /**
     * NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: http://kubernetes.io/docs/user-guide/node-selection/README
     * @var array|null $nodeSelector public property
     */
    public $nodeSelector;

    /**
     * Restart policy for all containers within the pod. One of Always, OnFailure, Never. Default to Always. More info: http://kubernetes.io/docs/user-guide/pod-states#restartpolicy
     * @var string|null $restartPolicy public property
     */
    public $restartPolicy;

    /**
     * If specified, the pod will be dispatched by specified scheduler. If not specified, the pod will be dispatched by default scheduler.
     * @var string|null $schedulerName public property
     */
    public $schedulerName;

    /**
     * SecurityContext holds pod-level security attributes and common container settings. Optional: Defaults to empty.  See type description for default values of each field.
     * @var V1PodSecurityContext|null $securityContext public property
     */
    public $securityContext;

    /**
     * DeprecatedServiceAccount is a depreciated alias for ServiceAccountName. Deprecated: Use serviceAccountName instead.
     * @var string|null $serviceAccount public property
     */
    public $serviceAccount;

    /**
     * ServiceAccountName is the name of the ServiceAccount to use to run this pod. More info: http://releases.k8s.io/HEAD/docs/design/service_accounts.md
     * @var string|null $serviceAccountName public property
     */
    public $serviceAccountName;

    /**
     * If specified, the fully qualified Pod hostname will be "<hostname>.<subdomain>.<pod namespace>.svc.<cluster domain>". If not specified, the pod will not have a domainname at all.
     * @var string|null $subdomain public property
     */
    public $subdomain;

    /**
     * Optional duration in seconds the pod needs to terminate gracefully. May be decreased in delete request. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. Defaults to 30 seconds.
     * @var integer|null $terminationGracePeriodSeconds public property
     */
    public $terminationGracePeriodSeconds;

    /**
     * If specified, the pod's tolerations.
     * @var V1Toleration[]|null $tolerations public property
     */
    public $tolerations;

    /**
     * List of volumes that can be mounted by containers belonging to the pod. More info: http://kubernetes.io/docs/user-guide/volumes
     * @var V1Volume[]|null $volumes public property
     */
    public $volumes;

    /**
     * Constructor to set initial or default values of member properties
     * @param array                $containers                    Initialization value for $this->containers
     * @param integer              $activeDeadlineSeconds         Initialization value for $this-
     *                                                              >activeDeadlineSeconds
     * @param V1Affinity           $affinity                      Initialization value for $this->affinity
     * @param bool                 $automountServiceAccountToken  Initialization value for $this-
     *                                                              >automountServiceAccountToken
     * @param string               $dnsPolicy                     Initialization value for $this->dnsPolicy
     * @param bool                 $hostIPC                       Initialization value for $this->hostIPC
     * @param bool                 $hostNetwork                   Initialization value for $this->hostNetwork
     * @param bool                 $hostPID                       Initialization value for $this->hostPID
     * @param string               $hostname                      Initialization value for $this->hostname
     * @param array                $imagePullSecrets              Initialization value for $this->imagePullSecrets
     * @param array                $initContainers                Initialization value for $this->initContainers
     * @param string               $nodeName                      Initialization value for $this->nodeName
     * @param array                $nodeSelector                  Initialization value for $this->nodeSelector
     * @param string               $restartPolicy                 Initialization value for $this->restartPolicy
     * @param string               $schedulerName                 Initialization value for $this->schedulerName
     * @param V1PodSecurityContext $securityContext               Initialization value for $this->securityContext
     * @param string               $serviceAccount                Initialization value for $this->serviceAccount
     * @param string               $serviceAccountName            Initialization value for $this->serviceAccountName
     * @param string               $subdomain                     Initialization value for $this->subdomain
     * @param integer              $terminationGracePeriodSeconds Initialization value for $this-
     *                                                              >terminationGracePeriodSeconds
     * @param array                $tolerations                   Initialization value for $this->tolerations
     * @param array                $volumes                       Initialization value for $this->volumes
     */
    public function __construct()
    {
        if (22 == func_num_args()) {
            $this->containers                    = func_get_arg(0);
            $this->activeDeadlineSeconds         = func_get_arg(1);
            $this->affinity                      = func_get_arg(2);
            $this->automountServiceAccountToken  = func_get_arg(3);
            $this->dnsPolicy                     = func_get_arg(4);
            $this->hostIPC                       = func_get_arg(5);
            $this->hostNetwork                   = func_get_arg(6);
            $this->hostPID                       = func_get_arg(7);
            $this->hostname                      = func_get_arg(8);
            $this->imagePullSecrets              = func_get_arg(9);
            $this->initContainers                = func_get_arg(10);
            $this->nodeName                      = func_get_arg(11);
            $this->nodeSelector                  = func_get_arg(12);
            $this->restartPolicy                 = func_get_arg(13);
            $this->schedulerName                 = func_get_arg(14);
            $this->securityContext               = func_get_arg(15);
            $this->serviceAccount                = func_get_arg(16);
            $this->serviceAccountName            = func_get_arg(17);
            $this->subdomain                     = func_get_arg(18);
            $this->terminationGracePeriodSeconds = func_get_arg(19);
            $this->tolerations                   = func_get_arg(20);
            $this->volumes                       = func_get_arg(21);
        }
    }


    /**
     * Encode this object to JSON
     */
    public function jsonSerialize()
    {
        $json = array();
        $json['containers']                    = $this->containers;
        $json['activeDeadlineSeconds']         = $this->activeDeadlineSeconds;
        $json['affinity']                      = $this->affinity;
        $json['automountServiceAccountToken']  = $this->automountServiceAccountToken;
        $json['dnsPolicy']                     = $this->dnsPolicy;
        $json['hostIPC']                       = $this->hostIPC;
        $json['hostNetwork']                   = $this->hostNetwork;
        $json['hostPID']                       = $this->hostPID;
        $json['hostname']                      = $this->hostname;
        $json['imagePullSecrets']              = $this->imagePullSecrets;
        $json['initContainers']                = $this->initContainers;
        $json['nodeName']                      = $this->nodeName;
        $json['nodeSelector']                  = $this->nodeSelector;
        $json['restartPolicy']                 = $this->restartPolicy;
        $json['schedulerName']                 = $this->schedulerName;
        $json['securityContext']               = $this->securityContext;
        $json['serviceAccount']                = $this->serviceAccount;
        $json['serviceAccountName']            = $this->serviceAccountName;
        $json['subdomain']                     = $this->subdomain;
        $json['terminationGracePeriodSeconds'] = $this->terminationGracePeriodSeconds;
        $json['tolerations']                   = $this->tolerations;
        $json['volumes']                       = $this->volumes;

        return $json;
    }
}
