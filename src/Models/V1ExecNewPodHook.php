<?php
/*
 * OpenShiftAPIWithKubernetesLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

namespace OpenShiftAPIWithKubernetesLib\Models;

use JsonSerializable;

/**
 * ExecNewPodHook is a hook implementation which runs a command in a new pod based on the specified
 * container which is assumed to be part of the deployment template.
 */
class V1ExecNewPodHook implements JsonSerializable
{
    /**
     * Command is the action command and its arguments.
     * @required
     * @var array $command public property
     */
    public $command;

    /**
     * ContainerName is the name of a container in the deployment pod template whose Docker image will be used for the hook pod's container.
     * @required
     * @var string $containerName public property
     */
    public $containerName;

    /**
     * Env is a set of environment variables to supply to the hook pod's container.
     * @var V1EnvVar[]|null $env public property
     */
    public $env;

    /**
     * Volumes is a list of named volumes from the pod template which should be copied to the hook pod. Volumes names not found in pod spec are ignored. An empty list means no volumes will be copied.
     * @var array|null $volumes public property
     */
    public $volumes;

    /**
     * Constructor to set initial or default values of member properties
     * @param array  $command       Initialization value for $this->command
     * @param string $containerName Initialization value for $this->containerName
     * @param array  $env           Initialization value for $this->env
     * @param array  $volumes       Initialization value for $this->volumes
     */
    public function __construct()
    {
        if (4 == func_num_args()) {
            $this->command       = func_get_arg(0);
            $this->containerName = func_get_arg(1);
            $this->env           = func_get_arg(2);
            $this->volumes       = func_get_arg(3);
        }
    }


    /**
     * Encode this object to JSON
     */
    public function jsonSerialize()
    {
        $json = array();
        $json['command']       = $this->command;
        $json['containerName'] = $this->containerName;
        $json['env']           = $this->env;
        $json['volumes']       = $this->volumes;

        return $json;
    }
}
