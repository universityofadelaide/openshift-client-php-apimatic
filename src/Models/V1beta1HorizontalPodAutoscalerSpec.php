<?php
/*
 * OpenShiftAPIWithKubernetesLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

namespace OpenShiftAPIWithKubernetesLib\Models;

use JsonSerializable;

/**
 * specification of a horizontal pod autoscaler.
 */
class V1beta1HorizontalPodAutoscalerSpec implements JsonSerializable
{
    /**
     * upper limit for the number of pods that can be set by the autoscaler; cannot be smaller than MinReplicas.
     * @required
     * @var integer $maxReplicas public property
     */
    public $maxReplicas;

    /**
     * reference to Scale subresource; horizontal pod autoscaler will learn the current resource consumption from its status, and will set the desired number of pods by modifying its spec.
     * @required
     * @var V1beta1SubresourceReference $scaleRef public property
     */
    public $scaleRef;

    /**
     * target average CPU utilization (represented as a percentage of requested CPU) over all the pods; if not specified it defaults to the target CPU utilization at 80% of the requested resources.
     * @var V1beta1CPUTargetUtilization|null $cpuUtilization public property
     */
    public $cpuUtilization;

    /**
     * lower limit for the number of pods that can be set by the autoscaler, default 1.
     * @var integer|null $minReplicas public property
     */
    public $minReplicas;

    /**
     * Constructor to set initial or default values of member properties
     * @param integer                     $maxReplicas    Initialization value for $this->maxReplicas
     * @param V1beta1SubresourceReference $scaleRef       Initialization value for $this->scaleRef
     * @param V1beta1CPUTargetUtilization $cpuUtilization Initialization value for $this->cpuUtilization
     * @param integer                     $minReplicas    Initialization value for $this->minReplicas
     */
    public function __construct()
    {
        if (4 == func_num_args()) {
            $this->maxReplicas    = func_get_arg(0);
            $this->scaleRef       = func_get_arg(1);
            $this->cpuUtilization = func_get_arg(2);
            $this->minReplicas    = func_get_arg(3);
        }
    }


    /**
     * Encode this object to JSON
     */
    public function jsonSerialize()
    {
        $json = array();
        $json['maxReplicas']    = $this->maxReplicas;
        $json['scaleRef']       = $this->scaleRef;
        $json['cpuUtilization'] = $this->cpuUtilization;
        $json['minReplicas']    = $this->minReplicas;

        return $json;
    }
}
