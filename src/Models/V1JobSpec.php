<?php
/*
 * OpenShiftAPIWithKubernetesLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

namespace OpenShiftAPIWithKubernetesLib\Models;

use JsonSerializable;

/**
 * JobSpec describes how the job execution will look like.
 */
class V1JobSpec implements JsonSerializable
{
    /**
     * Template is the object that describes the pod that will be created when executing a job. More info: http://kubernetes.io/docs/user-guide/jobs
     * @required
     * @var V1PodTemplateSpec $template public property
     */
    public $template;

    /**
     * Optional duration in seconds relative to the startTime that the job may be active before the system tries to terminate it; value must be positive integer
     * @var integer|null $activeDeadlineSeconds public property
     */
    public $activeDeadlineSeconds;

    /**
     * Completions specifies the desired number of successfully finished pods the job should be run with.  Setting to nil means that the success of any pod signals the success of all pods, and allows parallelism to have any positive value.  Setting to 1 means that parallelism is limited to 1 and the success of that pod signals the success of the job. More info: http://kubernetes.io/docs/user-guide/jobs
     * @var integer|null $completions public property
     */
    public $completions;

    /**
     * ManualSelector controls generation of pod labels and pod selectors. Leave `manualSelector` unset unless you are certain what you are doing. When false or unset, the system pick labels unique to this job and appends those labels to the pod template.  When true, the user is responsible for picking unique labels and specifying the selector.  Failure to pick a unique label may cause this and other jobs to not function correctly.  However, You may see `manualSelector=true` in jobs that were created with the old `extensions/v1beta1` API. More info: http://releases.k8s.io/HEAD/docs/design/selector-generation.md
     * @var bool|null $manualSelector public property
     */
    public $manualSelector;

    /**
     * Parallelism specifies the maximum desired number of pods the job should run at any given time. The actual number of pods running in steady state will be less than this number when ((.spec.completions - .status.successful) < .spec.parallelism), i.e. when the work left to do is less than max parallelism. More info: http://kubernetes.io/docs/user-guide/jobs
     * @var integer|null $parallelism public property
     */
    public $parallelism;

    /**
     * Selector is a label query over pods that should match the pod count. Normally, the system sets this field for you. More info: http://kubernetes.io/docs/user-guide/labels#label-selectors
     * @var V1LabelSelector|null $selector public property
     */
    public $selector;

    /**
     * Constructor to set initial or default values of member properties
     * @param V1PodTemplateSpec $template              Initialization value for $this->template
     * @param integer           $activeDeadlineSeconds Initialization value for $this->activeDeadlineSeconds
     * @param integer           $completions           Initialization value for $this->completions
     * @param bool              $manualSelector        Initialization value for $this->manualSelector
     * @param integer           $parallelism           Initialization value for $this->parallelism
     * @param V1LabelSelector   $selector              Initialization value for $this->selector
     */
    public function __construct()
    {
        if (6 == func_num_args()) {
            $this->template              = func_get_arg(0);
            $this->activeDeadlineSeconds = func_get_arg(1);
            $this->completions           = func_get_arg(2);
            $this->manualSelector        = func_get_arg(3);
            $this->parallelism           = func_get_arg(4);
            $this->selector              = func_get_arg(5);
        }
    }


    /**
     * Encode this object to JSON
     */
    public function jsonSerialize()
    {
        $json = array();
        $json['template']              = $this->template;
        $json['activeDeadlineSeconds'] = $this->activeDeadlineSeconds;
        $json['completions']           = $this->completions;
        $json['manualSelector']        = $this->manualSelector;
        $json['parallelism']           = $this->parallelism;
        $json['selector']              = $this->selector;

        return $json;
    }
}
